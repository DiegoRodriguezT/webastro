[[["index.html","Pt1.html"],"Parte I Conjuntos, relaciones y funciones ‣ Lógica‣ Lógica","Skip to content. Conjuntos, relaciones y funciones Parte I Conjuntos, relaciones y funciones Previous page Next page"],[["index.html","Pt2.html"],"Parte II Sintaxis de la lógica proposicional ‣ Lógica‣ Lógica","Skip to content. Sintaxis de la lógica proposicional Parte II Sintaxis de la lógica proposicional Previous page Next page"],[["index.html","Pt3.html"],"Parte III Semantica de la logica proposicional ‣ Lógica‣ Lógica","Skip to content. Semantica de la logica proposicional Parte III Semantica de la logica proposicional Previous page Next page"],[["index.html","Pt4.html"],"Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica‣ Lógica","Skip to content. Teoria de la demostracion para logica proposicional Parte IV Teoria de la demostracion para logica proposicional Previous page Next page"],[["index.html","Pt5.html"],"Parte V Sintaxis de la logica de predicados ‣ Lógica‣ Lógica","Skip to content. Sintaxis de la logica de predicados Parte V Sintaxis de la logica de predicados Previous page Next page"],[["index.html","Pt6.html"],"Parte VI Semantica de la logica de predicados ‣ Lógica‣ Lógica","Skip to content. Semantica de la logica de predicados Parte VI Semantica de la logica de predicados Previous page Next page"],[["index.html","Pt7.html"],"Parte VII Teoria de la demostracion en logica de predicados ‣ Lógica‣ Lógica","Skip to content. Teoria de la demostracion en logica de predicados Parte VII Teoria de la demostracion en logica de predicados Observación. Los simbolos de funcion no son necesarios para la logica de predicados. Se pueden “simular” con predicados. Ejemplo. \\displaystyle D=\\{\\text{personas}\\} \\displaystyle m(x)\\colon la madre de \\displaystyle x\\rightarrow M(x,y): x es la madre de \\displaystyle y . “La madre de Antonio es rubia”. \\displaystyle R(x)\\colon x es rubio. \\displaystyle R(m(a)) . \\displaystyle\\forall x(M(x,a)\\rightarrow R(x)) “Todos los hermanos de Antonio son rubios” \\displaystyle\\Rightarrow\\forall x(H(x,a)\\rightarrow R(x)) (que no la puedo hacer con funciones). Vamos a ampliar el sistema de Gentzen para la logica proposicional, añadiendo a las 8 relgas que teniamos 4 nuevas reglas para los cuantificadores. El sistema de demostracion resultante es valido para la logica de predicados sin igualdad (definir un sistema que sea valido para la logica de predicados con igualdad que hemos introducido en los temas 5 y 6 requeriria reglas adicionales y tiene cierto grado de complejidad). Los nombres de las 4 nuevas reglas de inferencia son: \\displaystyle E\\forall \\displaystyle I\\forall \\displaystyle E\\exists \\displaystyle I\\exists Proposición 25.3.  ​ \\displaystyle\\varphi,\\psi,\\ldots representaran formulas cualesquiera de la logica de predicados.  ​ \\displaystyle\\varphi(x) denotara una formula donde la variable \\displaystyle x tiene apariciones libres. Si despues escribimos \\displaystyle\\varphi(t) , donde \\displaystyle t puede ser un termino cualquiera, esto representara la formula \\displaystyle\\varphi donde todas las apariciones libres de \\displaystyle x se han sustituido por \\displaystyle t .  ​Llamaremos variable fresca a una variable que no ha aparecido previamente en el razonamiento. Definición 25.4 (Regla de eliminacion del universal, \\displaystyle E\\forall ). Sea \\displaystyle t un termino cualquiera \\displaystyle\\begin{array}[]{c}\\forall x\\varphi(x)\\\\ \\hline\\cr\\varphi(t)\\end{array} Definición 25.5 (Regla de introduccion del existencial, \\displaystyle I\\exists ). Sea \\displaystyle t un termino cualquiera \\displaystyle\\begin{array}[]{c }\\varphi(t)\\\\ \\hline\\cr\\exists x\\varphi(x)\\end{array} Ejemplo. Demostrar la validez de \\displaystyle\\{\\forall x(P(x)\\to Q(x)),P(a)\\}\\vdash Q(a) . 1.​ \\displaystyle\\forall x(P(x)\\to Q(x)) Pr 2.​ \\displaystyle P(a) Pr 3.​ \\displaystyle P(a)\\to Q(a)\\quad E\\forall,1,x=a 4.​ \\displaystyle Q(a)\\quad E\\rightarrow,2,3 Ejemplo. Demostrar la validez de \\displaystyle\\{P(b),\\exists xP(x)\\to Q(a)\\}\\vdash Q(a) . 1.​ \\displaystyle P(b) Pr 2.​ \\displaystyle\\exists xP(x)toQ(a) Pr 3.​ \\displaystyle\\exists xP(x)\\quad I\\exists,1 4.​ \\displaystyle Q(a)\\quad E\\rightarrow,2,3 Definición 25.6 (Regla de introduccion del universal, \\displaystyle I\\forall ). \\displaystyle\\begin{array}[]{c}\\noindent\\framebox{\\parbox{426.82pt}{ $\\displaystyle y\\qquad\\qquad\\quad\\;\\text{Variable fresca}$ \\\\ $\\displaystyle\\vdots$ \\\\ $\\displaystyle\\varphi(y)$}}\\\\ \\hline\\cr\\forall x\\varphi(x)\\end{array} Observación. Este es el unico caso en el que usamos una demostracion auxiliar que no empieza con una premisa auxiliar, sino con una variable libre y que no sirve para introducir un implica sino un para todo. Ejemplo. Demostrar la validez de \\displaystyle\\forall xP(x)\\wedge\\forall xQ(x)\\vdash\\forall x(P(x)\\wedge Q(x)) 1.​ \\displaystyle\\forall xP(x)\\wedge\\forall xQ(x) 2.​ \\displaystyle y Variable fresca 3.​ \\displaystyle\\forall xP(x)\\quad E\\wedge,1 4.​ \\displaystyle P(y)\\quad E\\forall,3,x=y 5.​ \\displaystyle\\forall xQ(x)\\quad E\\wedge,1 6.​ \\displaystyle Q(y)\\quad E\\forall,5,x=y 7.​ \\displaystyle P(y)\\wedge Q(y) 8.​ \\displaystyle\\forall x(P(x)\\wedge Q(x))\\quad I\\forall(2-7) Ejemplo. Demostrar la validez de \\displaystyle\\forall x(P(x)\\wedge Q(x))\\vdash\\forall xP(x)\\wedge\\forall xQ(x) . 1.​ \\displaystyle\\forall x(P(x)\\wedge Q(x)) Pr 2.​ \\displaystyle y Variable fresca 3.​ \\displaystyle P(y)\\wedge Q(y)\\quad E\\forall,1,x=y 4.​ \\displaystyle P(y)\\quad E\\wedge,3 5.​ \\displaystyle\\forall xP(x)\\quad I\\forall(2-3) 6.​ \\displaystyle z Variable fresca 7.​ \\displaystyle P(z)\\wedge Q(z)\\quad E\\forall,1,x=z 8.​ \\displaystyle Q(z)\\quad E\\wedge,7 9.​ \\displaystyle\\forall xQ(x)\\quad I\\forall(6-8) 10.​ \\displaystyle\\forall xP(x)\\wedge\\forall xQ(x)\\quad I\\wedge,5,9 Definición 25.7 (Regla de eliminacion del existencial, \\displaystyle E\\exists ). Sea \\displaystyle y una variable fresca y que no aparece libre en \\displaystyle\\psi . \\displaystyle\\begin{array}[]{c}\\exists x\\varphi(x)\\\\ \\varphi(v)\\to\\psi\\\\ \\hline\\cr\\psi\\end{array} Observación. Tipicamente la regla \\displaystyle E\\exists se usa cuando se tiene una formula \\displaystyle\\exists x\\varphi(x) , iniciando una demostracion auxiliar que tiene como premisa auxiliar \\displaystyle\\varphi(y) y llegando a una conclusion que no dependa de \\displaystyle y . \\displaystyle\\exists x\\varphi(x) \\displaystyle\\varphi(y)\\qquad\\quad\\text{Premisa auxiliar} \\displaystyle\\vdots \\displaystyle\\psi \\displaystyle\\begin{array}[]{lr}\\varphi(y)\\rightarrow\\psi&I\\rightarrow\\\\ \\psi&E\\exists\\end{array} Ejemplo. Demostrar la validez de \\displaystyle\\{\\forall x(P(x)\\to Q(x)),\\exists xP(x)\\}\\vdash\\exists xQ(x) . 1.​ \\displaystyle\\exists xP(x) Pr 2.​ \\displaystyle\\forall x(P(x)\\to Q(x)) Pr 3.​ \\displaystyle P(y) Pr aux (var fresca) 4.​ \\displaystyle P(y)\\to Q(y)\\quad E\\forall,2,x=y 5.​ \\displaystyle Q(y)\\quad E\\to,3,4 6.​ \\displaystyle\\exists xQ(x)\\quad I\\exists,5,x=y 7.​ \\displaystyle P(y)\\to\\exists xQ(x)\\quad I\\to(3-6) 8.​ \\displaystyle\\exists xQ(x)\\quad E\\exists,1,7 Ejemplo. Demostrar la validez de \\displaystyle\\{\\exists xP(x),\\exists xQ(x)\\}\\vdash\\exists x\\exists y(P(x)% \\wedge Q(y)) . 1.​ \\displaystyle\\exists xP(x) Pr 2.​ \\displaystyle\\exists xQ(x) Pr 3.​ \\displaystyle P(z) Pr aux (z var fresca) 4.​ \\displaystyle Q(t) Pr aux (t var fresca) 5.​ \\displaystyle P(z)\\wedge Q(t)\\quad I\\wedge,3,4 6.​ \\displaystyle\\exists y(P(z)\\wedge Q(y))\\quad I\\exists,5,y=t 7.​ \\displaystyle Q(t)\\to\\exists y(P(z)\\wedge Q(y))\\quad I\\to(4-6) 8.​ \\displaystyle\\exists y(P(z)\\wedge Q(y))\\quad E\\exists,2,7 9.​ \\displaystyle\\exists x\\exists y(P(x)\\wedge Q(y))\\quad I\\exists,8,x=z 10.​ \\displaystyle P(z)\\to\\exists x\\exists y(P(x)\\wedge Q(y))\\quad I\\to(3-9) 11.​ \\displaystyle\\exists x\\exists y(P(x)\\wedge Q(y))\\quad E\\exists,1,10 Ejemplo. Demostrar la validez de \\displaystyle\\exists y\\forall xP(x,y)\\vdash\\forall x\\exists yP(x,y) . 1.​ \\displaystyle\\exists y\\forall xP(x,y) Pr 2.​ \\displaystyle\\forall xP(x,z) Pr aux (var fresca) 3.​ \\displaystyle t Var fresca 4.​ \\displaystyle P(t,z)\\quad E\\forall,2,x=t 5.​ \\displaystyle\\exists yP(x,y)\\quad I\\exists,4,y=z 6.​ \\displaystyle\\forall x\\exists yP(x,y)\\quad I\\forall(3-5) 7.​ \\displaystyle\\forall xP(x,z)\\to\\forall x\\exists yP(x,y)\\quad I\\to(2-6) 8.​ \\displaystyle\\forall x\\exists yP(x,y)\\quad E\\exists,1,7 Observación. Se puede demostrar que el sistema de Gentzen que hemos introducido es correcto y completo para la logica de predicados. Sin embargo, esta logica no es decidible. Previous page"],[["index.html","Pt1.html","S1.html"],"1 Conjuntos ‣ Parte I Conjuntos, relaciones y funciones ‣ Lógica‣ Parte I Conjuntos, relaciones y funciones ‣ Lógica","Skip to content. Conjuntos 1 Conjuntos Definición 1.1. Un conjunto es una coleccion de objetos, que se denominan elementos de ese conjunto. Si \\displaystyle A es un conjunto y \\displaystyle b es un elemento de \\displaystyle A decimos que \\displaystyle b pertenece a \\displaystyle A . Notacion: \\displaystyle b\\in A . En caso contrario, decimos que \\displaystyle b no pertenece a \\displaystyle A . Notacion: \\displaystyle b\\notin A . Una forma de expresar conjuntos es enumerar sus elementos: Ejemplo. \\displaystyle A=\\{1,3,5,7\\} Definición 1.2 (Subconjunto). Sean \\displaystyle A y \\displaystyle B dos conjuntos. Se dice que \\displaystyle A es un subconjunto de \\displaystyle B si todo elemento de \\displaystyle A es tambien elemento de \\displaystyle B . Tambien se dice que \\displaystyle A esta contenido en \\displaystyle B . Notacion: \\displaystyle A\\subseteq B . En caso contrario diremos que \\displaystyle A no esta contenido en B. Notacion: \\displaystyle A\\not\\subseteq B . Definición 1.3. Sean \\displaystyle A y \\displaystyle B dos conjuntos. Decimos que \\displaystyle A y \\displaystyle B son iguales si tienen los mismos elementos. Esto es lo mismo que decir que \\displaystyle A\\subseteq B y \\displaystyle B\\subseteq A . Notacion: \\displaystyle A=B . En caso contrario, diremos que \\displaystyle A y \\displaystyle B son distintos. Notacion: \\displaystyle A\\neq B . Observación. En un conjunto no se tienen en cuenta elementos repetidos. Tampoco se tiene en cuenta el orden. Definición 1.4 (Contenido estricto). Decimos que A esta estrictamente contenido en \\displaystyle B si \\displaystyle A\\subseteq B y \\displaystyle A\\neq B . Notacion: \\displaystyle A\\subset B . La segunda forma de expresar conjuntos consiste en indicar una propiedad. Ejemplo. \\displaystyle A=\\{x\\mid x\\text{ es un numero primo menor que 15}\\} \\displaystyle A=\\{2,3,5,7,11,13\\} \\displaystyle B=\\{x\\mid x\\text{ es un numero primo mayor que 15}\\} \\displaystyle B=\\{17,19,23,29,31,37,41,43,\\ldots\\} Definición 1.5 (Conjuntos numericos, informal).  ​Numeros naturales: \\displaystyle\\mathbb{N}\\coloneqq\\{1,2,3,4,5,\\ldots\\} . No tiene solucion \\displaystyle 2-x=5 .  ​Numeros enteros: \\displaystyle\\mathbb{Z}\\coloneqq\\{\\ldots,-2,-1,0,1,2,\\ldots\\} . No tiene solucion \\displaystyle 2x=5 .  ​Numeros racionales: \\displaystyle\\mathbb{Q}\\coloneqq\\left\\{\\frac{a}{b}\\mid a,b\\in\\mathbb{Z},b\\neq 0\\right\\} . Tienen expresion decimal periodica. No tiene solucion \\displaystyle x^{2}=2 .  ​Numeros reales: \\displaystyle\\mathbb{R} . Tienen expresion decimal arbitraria, periodica o no periodica. No tiene solucion \\displaystyle x^{2}=-1 .  ​Numeros complejos: \\displaystyle i\\coloneqq\\sqrt{-1} la unidad imaginaria. \\displaystyle\\mathbb{C}\\coloneqq\\{a+bi\\mid a,b\\in\\mathbb{R}\\} Definición 1.6. Se define el conjunto vacio como un conjunto sin elementos. Notacion: \\displaystyle\\varnothing Proposición 1.1. Sea \\displaystyle A un conjunto cualquiera. Se cumple que \\displaystyle\\varnothing\\subseteq A . Demostración. Lo demostraremos por reduccion al absurdo. Supongamos que \\displaystyle\\varnothing\\not\\subseteq A . Entonces, existe un elemento \\displaystyle x tal que \\displaystyle x\\in\\varnothing y \\displaystyle x\\notin A . Esto es una contradiccion, ya que el conjunto \\displaystyle\\varnothing no tiene elementos. Luego es falso que \\displaystyle\\varnothing\\not\\subseteq A y por tanto \\displaystyle\\varnothing\\subseteq A . ∎ Definición 1.7 (Operaciones con conjuntos). Sean \\displaystyle A y \\displaystyle B dos conjuntos. Se definen:  ​Interseccion de \\displaystyle A y \\displaystyle B : \\displaystyle A\\cap B\\coloneqq\\{x\\mid x\\in A\\text{ y }x\\in B\\}  ​Union de \\displaystyle A y \\displaystyle B : \\displaystyle A\\cup B\\coloneqq\\{x\\mid x\\in A\\text{ o }x\\in B\\}  ​Diferencia entre \\displaystyle A y \\displaystyle B (o \\displaystyle A menos \\displaystyle B ): \\displaystyle A\\setminus B\\coloneqq\\{x\\mid x\\in A\\text{ y }x\\notin B\\} Definición 1.8. Decimos que un conjunto \\displaystyle A es finito si tiene tantos elementos como un numero natural o bien si no tiene elementos ( \\displaystyle\\varnothing ). En caso contrario decimos que \\displaystyle A es infinito. Definición 1.9. Si \\displaystyle A es un conjunto finito, se define el cardinal de \\displaystyle A como su numero de elementos. El cardinal de \\displaystyle\\varnothing es 0. Si \\displaystyle A es un conjunto infinito tiene cardinal infinito. Notacion: \\displaystyle|A| Definición 1.10 (Partes de un conjunto). Sea \\displaystyle A un conjunto. Se define el conjunto de las partes de \\displaystyle A como el conjunto formado por todos los subconjuntos de \\displaystyle A . Simbolicamente: \\displaystyle\\mathcal{{P}}(A)=\\{B\\mid B\\subseteq A\\} Ejemplo. Sean \\displaystyle A=\\{1,2\\} , \\displaystyle B=\\{1,2,3\\} , \\displaystyle C=\\{1,2,3,4\\} . Escribir los conjuntos \\displaystyle\\mathcal{{P}}(A),\\mathcal{{P}}(B),\\mathcal{{P}}(C),\\mathcal{{P}}(% \\mathcal{{P}}(A)) .  ​Subconjuntos de \\displaystyle A : \\displaystyle\\{1\\},\\{2\\},\\{1,2\\},\\varnothing . Luego \\displaystyle\\mathcal{{P}}(A)=\\{\\varnothing,\\{1\\},\\{2\\},\\{1,2\\}\\}  ​Subconjuntos de \\displaystyle B : \\displaystyle\\{1\\},\\{2\\},\\{3\\},\\{1,2\\},\\{1,3\\},\\{2,3\\},\\{1,2,3\\},\\varnothing . Luego \\displaystyle\\mathcal{{P}}(B)=\\{\\varnothing,\\{1\\},\\{2\\},\\{3\\},\\{1,2\\},\\{1,3\\},% \\{2,3\\},\\{1,2,3\\}\\} Teorema 1.1. Sea \\displaystyle A un conjunto finito. Entonces se cumple que \\displaystyle|\\mathcal{{P}}(A)|=2^{|A|} Demostración. Considero el conjunto \\displaystyle A formado por \\displaystyle n elementos donde \\displaystyle n\\in\\mathbb{N} . Sin perdida de generalidad, supongo que \\displaystyle A=\\{1,2,3,\\ldots,n\\} . Para contar subconjuntos de \\displaystyle A , planteo el cuestionario 1.​¿Está 1 en el subconjunto? 2.​¿Está 2 en el subconjunto? n.​¿Está \\displaystyle n en el subconjunto? Hay el mismo numero de subconjuntos de \\displaystyle A que de respuestas al cuestionario. Como el cuestionario tiene \\displaystyle n preguntas y cada una 2 respuestas posibles, hay \\displaystyle 2^{n} respuestas diferentes al cuestionario y, por tanto, \\displaystyle 2^{n} subconjuntos de \\displaystyle A . Falta probarlo para \\displaystyle A=\\varnothing . Se cumple que \\displaystyle\\varnothing\\subseteq\\varnothing y es el unico posible. Luego \\displaystyle\\mathcal{{P}}(\\varnothing)=\\{\\varnothing\\} Tenemos que \\displaystyle|A|=0 y \\displaystyle|\\mathcal{{P}}(A)|=1 . Ademas, \\displaystyle 2^{|A|}=2^{0}=1=|\\mathcal{{P}}(A)| ∎ Demostración. Tambien lo demostraremos por induccion sobre \\displaystyle n , el numero de elementos de \\displaystyle A . El caso \\displaystyle n=0 esta hecho en la demostracion anterior. En el caso base, \\displaystyle n=1 , \\displaystyle A=\\{1\\} y \\displaystyle\\mathcal{{P}}(A)=\\{\\varnothing,\\{1\\}\\} . Luego \\displaystyle|A|=1 y \\displaystyle|\\mathcal{{P}}(A)|=2=2^{1}=2^{|A|} . Se cumple para \\displaystyle n=1 . Hipotesis de induccion: Supongamos que el resultado es cierto para \\displaystyle n ( \\displaystyle A=\\{1,2,3,\\ldots,n\\} y \\displaystyle|\\mathcal{{P}}(A)|=2^{n} ) Tengo que demostrar, a partir de esto, la tesis de induccion: Si \\displaystyle B=\\{1,2,3,\\ldots,n,n+1\\} entonces \\displaystyle|\\mathcal{{P}}(A)|=2^{n+1} . Hay 2 tipos de subconjuntos de \\displaystyle B . Tipo 1 Los que no tienen a \\displaystyle n+1 como elemento. Por hipotesis de induccion hay \\displaystyle 2^{n} subconjuntos de \\displaystyle B de este tipo (son los mismos que los de \\displaystyle A ). Tipo 2 Los que si tienen a \\displaystyle n+1 como elemento. Cada uno de estos se obtiene añadiendo el elemento \\displaystyle n+1 a un subconjunto de Tipo 1. Por tanto, hay tantos como habia de Tipo 1: \\displaystyle 2^{n} . En total, \\displaystyle B tiene: \\displaystyle\\underbrace{2^{n}}_{\\text{Tipo 1}}+\\underbrace{2^{n}}_{\\text{Tipo% 2}}=2\\cdot 2^{n}=2^{n+1}=|\\mathcal{{P}}(B)| Asi, queda demostrada la tesis de induccion. ∎ Definición 1.11 (Par ordenado). Dados dos conjuntos \\displaystyle A y \\displaystyle B y dos elementos \\displaystyle a\\in A y \\displaystyle b\\in B , se define el par ordenado formado por \\displaystyle a y \\displaystyle b como la expresion simbolica \\displaystyle(a,b) donde \\displaystyle a es el primer elemento del par y \\displaystyle b es el segundo elemento del par. Definición 1.12 (Producto cartesiano). Sean \\displaystyle A y \\displaystyle B dos conjuntos no vacios. Se define el producto cartesiano de \\displaystyle A por \\displaystyle B como el conjunto formado por todos los pares ordenados de la forma \\displaystyle(a,b) donde \\displaystyle a\\in A y \\displaystyle b\\in B . Simbolicamente: \\displaystyle A\\times B\\coloneqq\\{(a,b)\\mid a\\in A,b\\in B\\} Ejemplo. \\displaystyle A=\\{1,2,3\\} , \\displaystyle B=\\{2,4\\} \\displaystyle A\\times B=\\{(1,2),(1,4),(2,2),(2,4),(3,2),(3,4)\\} \\displaystyle B\\times A=\\{(2,1),(2,2),(2,3),(4,1),(4,2),(4,3)\\} El producto cartesiano no es conmutativo. Proposición 1.2. Sean \\displaystyle A y \\displaystyle B dos conjuntos finitos y no vacios. Se cumple que \\displaystyle|A\\times B|=|A|\\cdot|B| Demostración. Para formar todos los pares ordenados posibles, tenemos \\displaystyle|A| opciones en la primera coordenada y \\displaystyle|B| en la segunda. Por tanto, hay en total \\displaystyle|A|\\cdot|B| pares ordenados. Así, \\displaystyle|A\\times B|=|A|\\cdot|B| ∎ Observación. Si \\displaystyle A o \\displaystyle B es infinito \\displaystyle\\Rightarrow \\displaystyle|A\\times B|=\\infty Definición 1.13 (n-tupla ordenada). Sea \\displaystyle n\\in\\mathbb{N} , \\displaystyle n\\geq 2 . Sean \\displaystyle A_{1},A_{2},\\ldots,A_{n} conjuntos y \\displaystyle a_{1}\\in A_{1} , \\displaystyle a_{2}\\in A_{2} , \\displaystyle\\ldots , \\displaystyle a_{n}\\in A_{n} elementos de sus conjuntos. Se define la n-tupla ordenada formada por esos elementos como la expresion simbolica \\displaystyle(a_{1},a_{2},\\ldots,a_{n}) Definición 1.14. Sea \\displaystyle n\\in\\mathbb{N} , \\displaystyle n\\geq 2 . Sean \\displaystyle A_{1},A_{2},\\ldots,A_{n} conjuntos no vacios. Se define el producto cartesiano de esos conjuntos como \\displaystyle A_{1}\\times A_{2}\\times\\dots\\times A_{n}\\coloneqq\\{(a_{1},a_{2},% \\dots,a_{n})\\mid a_{1}\\in A_{1},a_{2}\\in A_{2},\\ldots,a_{n}\\in A_{n}\\} Si hacemos el producto cartesiano de un conjunto no vacio \\displaystyle A por si mismo varias veces, usaremos \\displaystyle A^{n}\\coloneqq A\\times A\\times\\dots A\\text{ (n veces)} Previous page Next page"],[["index.html","Pt3.html","S10.html"],"10 Evaluacion semantica de formulas (valores de verdad) ‣ Parte III Semantica de la logica proposicional ‣ Lógica‣ Parte III Semantica de la logica proposicional ‣ Lógica","Skip to content. Evaluacion semantica de formulas (valores de verdad) 10 Evaluacion semantica de formulas (valores de verdad) Definición 10.1. Llamamos signatura al conjunto \\displaystyle\\Sigma formado por todos los simbolos de proposicion atomica. Observación. Como en una formula o conjunto finito de formulas solo aparecera una cantidad finita de simbolos de proposicion atomica, por extension, llamaremos tambien signatura a cualquier conjunto finito de simbolos de proposicion atomica (y lo denotaremos tambien con \\displaystyle\\Sigma ). Definición 10.2. Sea \\displaystyle\\Sigma una signatura. Llamamos valoracion … Ejemplo. Sea \\displaystyle\\Sigma=\\{p,q,r\\} Un ejemplo de valoracion sobre \\displaystyle\\Sigma es \\displaystyle v_{1}\\colon\\Sigma \\displaystyle\\longrightarrow(0,1) \\displaystyle p \\displaystyle\\longmapsto 0 \\displaystyle q \\displaystyle\\longmapsto 1 \\displaystyle r \\displaystyle\\longmapsto 1 Observación. En total habria \\displaystyle 2^{3}=8 valoraciones diferentes. Definición 10.3. Sea \\displaystyle\\Sigma la signatura formada por todos los simbolos de proposicion atomica y \\displaystyle u una valoracion concreta definida sobre \\displaystyle\\Sigma . Vamos a definir por recursion una funcion que asocia a cada formula \\displaystyle\\varphi un valor de verdad que denotaremos \\displaystyle(\\varphi)^{u} , extendiendo la valoracion \\displaystyle y de proposiciones atomicas a todas las formulas:  ​Si \\displaystyle p es un simbolo de proposicion atomica \\displaystyle\\Rightarrow(p)^{u}\\coloneqq u(p) , \\displaystyle(\\perp)^{u}\\coloneqq 0 , \\displaystyle(\\top)^{u}\\coloneqq 1 .  ​Si \\displaystyle\\varphi\\in\\mathcal{{F}}_{0} \\displaystyle\\Rightarrow(\\neg\\varphi)^{u}\\coloneqq\\begin{dcases}1\\text{ si }(% \\varphi)^{u}=0\\\\ 0\\text{ si }(\\varphi)^{u}=1\\end{dcases} Definición 10.4. Sean \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{0}\\Rightarrow \\displaystyle((\\varphi\\wedge\\psi))^{u}\\coloneqq\\begin{dcases}1\\text{ si }(% \\varphi)^{u}=(\\psi)^{u}=1\\\\ 0\\text{ en otro caso}\\end{dcases} \\displaystyle((\\varphi\\vee\\psi))^{u}\\coloneqq\\begin{dcases}0\\text{ si }(% \\varphi)^{u}=(\\psi)^{u}=0\\\\ 1\\text{ en otro caso}\\end{dcases} \\displaystyle((\\varphi\\rightarrow\\psi))^{u}\\coloneqq\\begin{dcases}0\\text{ si }% (\\varphi)^{u}=1\\text{ y }(\\psi)^{u}=0\\\\ 1\\text{ en otro caso}\\end{dcases} \\displaystyle((\\varphi\\leftrightarrow\\psi))^{u}\\coloneqq\\begin{dcases}1\\text{ % si }(\\varphi)^{u}=(\\psi)^{u}\\\\ 0\\text{ si }(\\varphi)^{u}\\neq(\\psi)^{u}\\end{dcases} Observación. Si no se genera ambiguedad escribiremos \\displaystyle\\varphi^{u} en lugar de \\displaystyle(\\varphi)^{u} Observación. Los valores de verdad de las conectivas binarias se pueden resumir con tablas de verdad. Ejemplo. Sea \\displaystyle u la valoracion dada por \\displaystyle u(p)=u(q)=1,u(r)=0 . Hallar \\displaystyle\\varphi^{u} siendo \\displaystyle\\varphi=(p\\rightarrow\\neg(q\\wedge r))\\leftrightarrow(p\\vee\\neg q% \\rightarrow\\neg r) \\displaystyle(q\\wedge r)^{u}=0 , \\displaystyle\\neg(q\\wedge r)^{u}=1 , \\displaystyle(p\\rightarrow\\neg(q\\wedge r))^{u}=1 . Por otro lado \\displaystyle(\\neg q)^{u}=0 , \\displaystyle(p\\vee\\neg q)^{u}=1 , \\displaystyle(\\neg r)^{u}=1 , \\displaystyle(p\\vee\\neg q\\rightarrow\\neg r)^{u}=1 Por tanto, \\displaystyle\\varphi^{u}=1 . Previous page Next page"],[["index.html","Pt3.html","S11.html"],"11 Modelos y contraejemplos. Clasificacion de formulas ‣ Parte III Semantica de la logica proposicional ‣ Lógica‣ Parte III Semantica de la logica proposicional ‣ Lógica","Skip to content. Modelos y contraejemplos. Clasificacion de formulas 11 Modelos y contraejemplos. Clasificacion de formulas Observación. Cuando hablemos de una formula \\displaystyle\\varphi y su valor de verdad bajo una valoracion \\displaystyle u , supondremos siempre que los simbolos de proposicion atomica que aparecen en \\displaystyle\\varphi pertenecen al dominio de \\displaystyle u . Definición 11.1. Sean \\displaystyle\\varphi una formula y \\displaystyle u una valoracion.  ​Si \\displaystyle\\varphi^{u}=1 Definición 11.2. Sea \\displaystyle\\varphi una formula. Decimos que \\displaystyle\\varphi es:  ​satisfacible si \\displaystyle\\exists u valoracion tal que \\displaystyle\\varphi^{u}=1 .  ​insatisfacible si no es satisfacible.  ​tautologia si \\displaystyle\\forall u valoracion se tiene que \\displaystyle\\varphi^{u}=1  ​contradiccion si \\displaystyle\\forall u valoracion se tiene que \\displaystyle\\varphi^{u}=0  ​contingencia si no es tautologia ni contradiccion Observación. Esta clasificacion puede resumirse en la tabla Satisfacible Tautologia o contingencia Insatisfacible Contradiccion Cuando hablemos de “clasificar una formula” nos referiremos a decidir si es tautologia, contingencia o contradiccion. Ejemplo. Clasifica la formula \\displaystyle\\varphi=(p\\rightarrow\\neg(q\\wedge r))\\leftrightarrow(p\\vee\\neg q% \\rightarrow\\neg r) Ya hemos encontrado 2 modelos. Sabemos que es satisfacible. Voy a buscar un contraejemplo. w para conseguir esto Si \\displaystyle w(p)=0\\Rightarrow(p\\rightarrow\\neg(q\\wedge r))^{w}=1 . Voy a intentar que la segunda parte sea falsa. \\displaystyle w(q)=0\\Rightarrow(\\neg q)^{w}=1\\Rightarrow(\\neg q)^{w}=1 . \\displaystyle(p\\vee\\neg q)^{w}=1 . Si \\displaystyle w(r)=1\\Rightarrow(\\neg r)^{w}=0\\Rightarrow(p\\vee\\neg q% \\rightarrow\\neg r)^{w}=0 . \\displaystyle\\varphi^{w}=0 . Luego w es un contraejemplo de \\displaystyle\\varphi , por tanto \\displaystyle\\varphi es una contingencia. Ejemplo. Demuestra que la siguiente formula es una tautologia \\displaystyle\\varphi=(p\\rightarrow q)\\wedge(q\\rightarrow r)\\rightarrow(p% \\rightarrow r) Lo demostraremos utilizando una tabla de verdad. p q r \\displaystyle p\\rightarrow q \\displaystyle q\\rightarrow r \\displaystyle(p\\rightarrow q)\\wedge(q\\rightarrow r) \\displaystyle p\\rightarrow r \\displaystyle\\varphi 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 1 1 0 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 He visto que las 8 valoraciones posibles son modelos de \\displaystyle\\varphi . Por tanto, \\displaystyle\\varphi es una tautologia. Ejemplo. Demuestra que la siguiente formula es una contradiccion \\displaystyle\\varphi=(p\\rightarrow q)\\wedge(r\\rightarrow s)\\wedge p\\wedge r% \\wedge(\\neg q\\vee\\neg s) \\displaystyle(p\\wedge q)\\wedge r y \\displaystyle p(q\\wedge r) son verdaderas si y solo si \\displaystyle p=q=r=1 . Son formulas distintas sintacticamente pero son equivalentes semanticamente. \\displaystyle(p\\wedge q)\\wedge r\\equiv p\\wedge(q\\wedge r)\\equiv p\\wedge q\\wedge r .  ​Caso 1: Si \\displaystyle p=0\\Rightarrow\\varphi=0 (son 8 valoraciones).  ​Caso 2: \\displaystyle p=1 . •​Caso 2.1: \\displaystyle r=0\\Rightarrow\\varphi=0 (son 4 valoraciones) •​Caso 2.2 : \\displaystyle r=1 Hacer tabla de verdad con \\displaystyle q y \\displaystyle s (4 filas). Salen todas falsas. Luego \\displaystyle\\varphi es una contradiccion. Alternativa: por reduccion al absurdo. Supongo que \\displaystyle\\varphi no es contradiccion \\displaystyle\\Rightarrow existe \\displaystyle u modelo de \\displaystyle\\varphi . Como es una conjuncion de varias formulas, tenemos que \\displaystyle u\\begin{dcases}p\\rightarrow q=1(a)\\\\ r\\rightarrow s=1(b)\\\\ p=1(c)\\\\ r=1(d)\\\\ \\neg q\\vee\\neg s=1(e)\\end{dcases} \\displaystyle\\begin{rcases}(a)+(c)\\Rightarrow q=1\\Rightarrow\\neg q=0\\\\ (b)+(d)\\Rightarrow s=1\\Rightarrow\\neg s=0\\end{rcases}\\Rightarrow\\neg q\\vee\\neg s% =0\\text{ Contradicion con (e)}\\Rightarrow Por tanto, \\displaystyle\\varphi es contradiccion. Previous page Next page"],[["index.html","Pt3.html","S12.html"],"12 Consecuencia logica ‣ Parte III Semantica de la logica proposicional ‣ Lógica‣ Parte III Semantica de la logica proposicional ‣ Lógica","Skip to content. Consecuencia logica 12 Consecuencia logica Definición 12.1. Sea \\displaystyle\\Phi=\\{\\varphi_{1},\\varphi_{2},\\ldots,\\varphi_{n}\\} un conjintp de formulas y \\displaystyle u una valoracion. Decimos que \\displaystyle u es modelo de \\displaystyle\\Phi si \\displaystyle\\forall i(u\\models\\varphi_{i}) . Definición 12.2. Sean \\displaystyle\\Phi=\\{\\varphi_{1},\\ldots,\\varphi_{n}\\} un conjunto de formulas y \\displaystyle\\psi otra formula. Decimos que \\displaystyle\\psi es consecuencia logica de \\displaystyle\\Phi si todo modelo de \\displaystyle\\Phi tambien es modelo de \\displaystyle\\psi . Observación. Si \\displaystyle\\Phi=\\{\\varphi\\} consta de una unica formula y \\displaystyle\\varphi es otra formula, en lugar de Definición 12.3. Recordemos que un razonamiento es una formula de tipo \\displaystyle\\varphi_{1}\\wedge\\varphi_{2}\\wedge\\cdots\\wedge\\varphi_{n} Ejemplo. Estudia si la siguiente implicacion logica es cierta \\displaystyle\\{p\\rightarrow q,q\\rightarrow r,\\neg r\\}\\models\\neg p p q r \\displaystyle p\\rightarrow q \\displaystyle q\\rightarrow r \\displaystyle\\neg r \\displaystyle\\neg p \\displaystyle\\varphi_{1}\\wedge\\varphi_{2}\\wedge\\varphi_{3} \\displaystyle(\\varphi_{1}\\wedge\\varphi_{2}\\wedge\\varphi_{3})\\rightarrow\\psi 0 0 0 1 1 0 1 1 0 0 0 1 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 1 1 1 0 0 0 1 \\displaystyle\\psi es consecuencia logica del compuesto de formulas \\displaystyle\\{\\varphi_{1},\\varphi_{2},\\varphi_{3}\\} . Contradiccion… Proposición 12.1. Sean \\displaystyle\\Phi=\\{\\varphi_{1},\\ldots,\\varphi_{n}\\} un conjunto de formulas y \\displaystyle\\psi otra formula. Entonces las siguientes afirmaciones son equivalentes:  ​ \\displaystyle\\Phi\\models\\psi  ​El razonamiento \\displaystyle\\varphi_{1}\\wedge\\varphi_{2}\\wedge\\cdots\\wedge\\varphi_{n} \\displaystyle\\rightarrow\\psi es correcto.  ​La formula \\displaystyle\\varphi_{1}\\wedge\\varphi_{2}\\wedge\\cdots\\wedge\\varphi_{n}\\wedge\\neg\\psi es una contradiccion. Demostración. Los tres puntos son equivalentes a decir que, para toda valoracion \\displaystyle v que cumpla que \\displaystyle\\varphi^{v}_{1}=1,\\varphi^{v}_{2}=1,\\ldots,\\varphi^{v}_{n}=1 Si cumple inversamente que \\displaystyle\\psi^{v}=1 ∎ Ejemplo. Estudia si el razonamiento: “Si llueve hace viento. No hace viento a menos que haga frio. No hace frio. Por tanto, no llueve.” formalizado mediante la formula \\displaystyle(l\\rightarrow v)\\wedge(\\neg f\\rightarrow\\neg v)\\wedge\\neg f% \\rightarrow\\neg l es correcto. Supongamos que el razonamiento es incorrecto, es decir, que existe una valoracion \\displaystyle u que hace ciertas las premisas y falsa la conclusion, es decir, \\displaystyle(l\\rightarrow v)^{u}=1 (1), \\displaystyle(\\neg f\\rightarrow\\neg v)=1 (2), \\displaystyle(\\neg f)^{u}=1 (3), \\displaystyle(\\neg l)^{u}=0 (4). \\displaystyle(4)\\Rightarrow u(l)=1\\Rightarrow u(v)=1\\Rightarrow(\\neg v)^{u}=0% \\Rightarrow(\\neg f\\Rightarrow\\neg v)^{u}=0 . Contradiccion porque \\displaystyle\\neg f\\rightarrow\\neg v es a la vez verdadera y falsa. Luego el razonamiento es correcto. Ejemplo. Estudia si el razonamiento del ejercicio 14 de la hoja 2: “Si llueve las calles estaran vacias. Si las calles estan vacias, el comercio obtiene perdidas. Los musicos no podrian sobrevivir si los comerciantes no les contratasen para componer canciones para publicidad. Los comerciantes invierten en canciones publicitarias cuando tienen perdidas. Por tanto, si llueve, los musicos pueden sobrevivir” formalizado mediante la formula \\displaystyle(l\\rightarrow v)\\wedge(v\\rightarrow p)\\wedge(\\neg c\\rightarrow% \\neg m)\\wedge(p\\rightarrow c)\\rightarrow(l\\rightarrow m) es correcto. \\displaystyle l\\rightarrow v\\;(1) , \\displaystyle v\\rightarrow p (2), \\displaystyle\\neg c\\rightarrow\\neg m (3), \\displaystyle p\\rightarrow c (4) Conclusion: \\displaystyle l\\rightarrow m (5). Supongamos que el razonamiento es incorrecto, es decir, existe una valoracion u tal que \\displaystyle(l\\rightarrow v)=1 , \\displaystyle(v\\rightarrow p)=1 , \\displaystyle(\\neg c\\rightarrow\\neg m)=1 , \\displaystyle p\\rightarrow c=1 , \\displaystyle l\\rightarrow m=0\\Rightarrow l=1,m=0 \\displaystyle l=1\\Rightarrow v=1(1)\\Rightarrow p=1(2)\\Rightarrow c=1(4) Con esta valoracion, \\displaystyle l=1,m=0,v=1,p=1 y \\displaystyle c=1 se tiene que (3) es verdadera. Luego esta valoracion es un contraejemplo al razonamiento y, por tanto, el razonamiento es incorrecto. Previous page Next page"],[["index.html","Pt3.html","S13.html"],"13 Equivalencia de formulas ‣ Parte III Semantica de la logica proposicional ‣ Lógica‣ Parte III Semantica de la logica proposicional ‣ Lógica","Skip to content. Equivalencia de formulas 13 Equivalencia de formulas Definición 13.1. Sean \\displaystyle\\varphi y \\displaystyle\\psi dos formulas. Decimos que son equivalentes si se cumple simultaneamente:  ​ \\displaystyle\\varphi\\models\\psi  ​ \\displaystyle\\psi\\models\\varphi Notacion: \\displaystyle\\varphi\\equiv\\psi Proposición 13.1. Sean \\displaystyle\\varphi y \\displaystyle\\psi dos formulas. Las siguientes dos afirmaciones son equivalentes.  ​ \\displaystyle\\varphi\\equiv\\psi  ​ \\displaystyle\\varphi\\leftrightarrow\\psi es una tautologia Demostración. Ambas afirmaciones son equivalentes a que todo modelo de \\displaystyle\\varphi tambien lo es de \\displaystyle\\psi y viceversa. ∎ Proposición 13.2. La relacion \\displaystyle\\equiv de equivalencia de formulas es una relacion de equivalencia en \\displaystyle\\mathcal{{F}}_{0} . Demostración. 1.​Reflexiva: \\displaystyle\\forall\\varphi , \\displaystyle\\varphi=\\varphi? Si \\displaystyle\\varphi tiene los mismos modelos y los mismos contraejemplos que \\displaystyle\\varphi . 2.​ \\displaystyle\\forall\\varphi,\\psi Si \\displaystyle\\varphi\\equiv\\psi\\Rightarrow\\psi\\equiv\\varphi? . Si \\displaystyle\\varphi y \\displaystyle\\psi tienen los mismos modelos y contraejemplos \\displaystyle\\Rightarrow\\psi y \\displaystyle\\varphi tienen los mismos modelos y contraejemplos. 3.​ \\displaystyle\\forall\\varphi,\\psi,\\alpha \\displaystyle\\begin{rcases}\\varphi\\equiv\\psi\\\\ \\psi\\equiv\\alpha\\end{rcases}\\overset{?}{\\Rightarrow}\\varphi\\equiv\\alpha Si \\displaystyle\\varphi,\\psi tienen los mismos modelos y contraejemplos y \\displaystyle\\varphi,\\alpha tienen los mismos modelos y contraejemplos, entonces \\displaystyle\\varphi y \\displaystyle\\alpha tienen los mismos modelos y contraejemplos. ∎ Ejemplo. Asociatividad de conectivas binarias.  ​ \\displaystyle(\\varphi\\leftrightarrow\\psi)\\leftrightarrow\\omega\\equiv\\varphi% \\leftrightarrow(\\psi\\leftrightarrow\\omega) \\displaystyle\\varphi \\displaystyle\\psi \\displaystyle\\omega \\displaystyle(\\varphi\\leftrightarrow\\psi) \\displaystyle(\\varphi\\leftrightarrow\\psi)\\leftrightarrow\\omega \\displaystyle\\psi\\leftrightarrow\\omega \\displaystyle\\varphi\\leftrightarrow(\\psi\\leftrightarrow\\omega) 0 0 0 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 1 1 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 Obs: la implicacion no es conmutativa ni asociativa en general. Contraejemplos: \\displaystyle p\\rightarrow q\\cancel{\\Rightarrow}q\\rightarrow p . Para justificarlo encuentro una valoracion que haga una verdadera y otra falsa. \\displaystyle u\\begin{dcases}p=1\\\\ q=0\\end{dcases}\\Rightarrow p\\rightarrow q=0,q\\rightarrow p=1 \\displaystyle p\\rightarrow(q\\rightarrow r)\\cancel{\\equiv}(p\\rightarrow q)\\rightarrow r con la valoracion \\displaystyle u:p=1,q=1,r=0 . Definición 13.2 (Subformula). Sea \\displaystyle\\varphi una formula. Decimos que \\displaystyle\\sigma es subformula de \\displaystyle\\varphi si \\displaystyle\\sigma es una cadena de simbolos consecutivos que aparecen dentro de la formula \\displaystyle\\varphi y que es, a su vez, una formula. Teorema 13.1 (de sustitucion). Sean  ​ \\displaystyle\\varphi una formula  ​ \\displaystyle\\sigma una subformula de \\displaystyle\\varphi  ​ \\displaystyle\\rho una formula tal que \\displaystyle\\varphi\\equiv\\rho  ​ \\displaystyle\\psi el resultado de sustituir en \\displaystyle\\varphi la subformula \\displaystyle\\sigma por \\displaystyle\\rho Entonces \\displaystyle\\varphi\\equiv\\psi . Demostración. Obvio. ∎ Previous page Next page"],[["index.html","Pt4.html","S14.html"],"14 Sistemas formales de demostracion ‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica","Skip to content. Sistemas formales de demostracion 14 Sistemas formales de demostracion Definición 14.1 (Sistema formal de demostracion). Un sistema formal de demostracion consiste en los siguientes tres elementos:  ​Una sintaxis: un alfabeto y un lenguaje definido sobre ese alfabeto que establece cuales son las formulas bien construidas del sistema.  ​Un conjunto de axiomas: formulas que se admiten como validas en el sistema sin necesidad de demostracion.  ​Un conjunto de reglas de inferencia o reglas de deduccion: permiten demostrar la validez de una formula en el sistema tomando como punto de partida axiomas u otras formulas ya demostradas válidas. Definición 14.2 (Teorema). Un teorema en un sistema de demostracion formal es una formula valida, en el sentido de que se obtiene de una de estas dos formas:  ​Es un axioma del sistema.  ​Se obtiene a partir de otros teoremas usando una regla de inferencia. Notacion: \\displaystyle\\vdash\\varphi (“ \\displaystyle\\varphi es un teorema”). Definición 14.3 (Razonamiento valido). Un razonamiento valido en un sistema de demostracion formal es una coleccion de formulas formada por un conjunto de premisas y una conclusion \\displaystyle\\varphi de manera que la conclusion se puede demostrar a partir de las premisas (como describiremos a continuacion). Notacion: \\displaystyle\\{\\varphi_{1},\\varphi_{2},\\ldots,\\varphi_{n}\\}\\vdash\\varphi Definición 14.4 (Demostracion de un teorema). Una demostracion de un teorema \\displaystyle\\varphi es una sucesion finita de formulas \\displaystyle\\psi_{1},\\psi_{2},\\ldots\\psi_{m},\\varphi donde cada formula de la sucesion cumple una de las siguientes afirmaciones: 1.​Es un axioma del sistema. 2.​Es un teorema ya demostrado en el sistema. 3.​Se obtiene a partir de las formulas anteriores de la sucesion usando una regla de inferencia. Definición 14.5 (Demostracion de un razonamiento). Una demostracion de un razonamiento \\displaystyle\\{\\varphi_{1},\\ldots,\\varphi_{n}\\}\\vdash\\varphi es una sucesion finita de formulas \\displaystyle\\varphi_{1},\\ldots,\\varphi_{n},\\psi_{1},\\ldots,\\psi_{m},\\varphi donde cada formula de la sucesion cumple: 1.​Es una premisa (las \\displaystyle n primeras). 2.​Es un axioma del sistema. 3.​Es un teorema ya demostrado. 4.​Se obtiene a partir de las formulas anteriores de la sucesion usando una regla de inferencia. Previous page Next page"],[["index.html","Pt4.html","S15.html"],"15 El sistema de Gentzen para la logica proposicional ‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica","Skip to content. El sistema de Gentzen para la logica proposicional 15 El sistema de Gentzen para la logica proposicional Definición 15.1 (Sistema de Gentzen). El sistema de Gentzen o sistema de deduccion natural para la logica proposicional viene dado por:  ​Sintaxis: la misma que la de la logica proposicional vista en el tema 2, con dos excepciones: •​No incluimos \\displaystyle\\top ni \\displaystyle\\perp en el alfabeto. •​No consideramos que \\displaystyle\\leftrightarrow sea una conectiva binaria. La usaremos como una abreviatura: \\displaystyle\\varphi\\leftrightarrow\\psi se considera una abreviatura de \\displaystyle(\\varphi\\rightarrow\\psi)\\wedge(\\psi\\rightarrow\\varphi)  ​El conjunto de axiomas es vacio.  ​Hay 8 reglas de inferencia que describiremos a continuacion. Sus nombres son: \\displaystyle E\\neg \\displaystyle I\\neg \\displaystyle E\\wedge \\displaystyle I\\wedge \\displaystyle E\\vee \\displaystyle I\\vee \\displaystyle E\\rightarrow \\displaystyle I\\rightarrow En lo que sigue denotaremos con \\displaystyle A,B,C a formulas cualesquiera de la logica proposicional. Definición 15.2 (Regla de eliminacion de la negacion, \\displaystyle E\\neg ). \\displaystyle\\begin{array}[]{c}\\neg\\neg A\\\\ \\hline\\cr A\\end{array} Definición 15.3 (Regla de introduccion de la conjuncion, \\displaystyle I\\wedge ). \\displaystyle\\begin{array}[]{c}A\\\\ B\\\\ \\hline\\cr A\\wedge B\\end{array} Definición 15.4 (Regla de eliminacion de la conjuncion, \\displaystyle E\\wedge ). Son, en realidad, dos reglas que llamaremos con el mismo nombre: \\displaystyle\\begin{array}[]{c}A\\wedge B\\\\ \\hline\\cr A\\end{array}\\quad\\begin{array}[]{c }A\\wedge B\\\\ \\hline\\cr B\\end{array} Definición 15.5 (Regla de introduccion de la disyuncion, \\displaystyle I\\vee ). Tambien son dos reglas que llamaremos con el mismo nombre: \\displaystyle\\begin{array}[]{c}A\\\\ \\hline\\cr A\\vee B\\end{array}\\quad\\begin{array}[]{c }B\\\\ \\hline\\cr A\\vee B\\end{array} Definición 15.6 (Regla de eliminacion de la implicacion, \\displaystyle E\\rightarrow ). Tambien recibe el nombre de modus ponens. \\displaystyle\\begin{array}[]{c}A\\\\ A\\rightarrow B\\\\ \\hline\\cr B\\end{array} Ejemplo. Demostrar la validez de \\displaystyle\\{p,p\\rightarrow q\\}\\vdash p\\wedge q . 1.​ \\displaystyle p Premisa 2.​ \\displaystyle p\\rightarrow q Premisa 3.​ \\displaystyle q\\quad \\displaystyle E\\rightarrow,1,2 4.​ \\displaystyle p\\wedge q\\quad \\displaystyle I\\wedge,1,3 Ejemplo. Demostrar la validez de \\displaystyle\\{p\\wedge q\\rightarrow r,q\\rightarrow p,q\\}\\vdash r . 1.​ \\displaystyle p\\wedge q\\rightarrow r Premisa 2.​ \\displaystyle q\\rightarrow p Premisa 3.​ \\displaystyle q Premisa 4.​ \\displaystyle p \\displaystyle\\quad E\\rightarrow,2,3 5.​ \\displaystyle p\\wedge q \\displaystyle\\quad I\\wedge,3,4 6.​ \\displaystyle r \\displaystyle\\quad E\\rightarrow,1,5 Ejemplo. Demostrar la validez de \\displaystyle\\{\\neg\\neg p,p\\rightarrow q\\wedge\\neg\\neg r,\\neg p\\vee q% \\rightarrow s\\}\\vdash s\\wedge r 1.​ \\displaystyle\\neg\\neg p Premisa 2.​ \\displaystyle p\\rightarrow q\\wedge\\neg\\neg r Premisa 3.​ \\displaystyle\\neg p\\vee q\\rightarrow s Premisa 4.​ \\displaystyle p \\displaystyle\\quad E\\neg,1 5.​ \\displaystyle q\\wedge\\neg\\neg r \\displaystyle\\quad E\\rightarrow,4,2 6.​ \\displaystyle q\\quad E\\wedge,5 7.​ \\displaystyle\\neg p\\vee q\\quad I\\vee,6 8.​ \\displaystyle s\\quad E\\rightarrow,7,3 9.​ \\displaystyle\\neg\\neg r\\quad E\\wedge,5 10.​ \\displaystyle r\\quad E\\neg,9 11.​ \\displaystyle s\\wedge r\\quad I\\wedge,8,10 Definición 15.7 (Regla de introduccion de la implicacion, \\displaystyle I\\rightarrow ). donde la “caja” es una demostracion auxiliar cuya primera linea es \\displaystyle A , que se supone temporalmente valida como premisa auxiliar y cuya ultima linea es \\displaystyle B . Observación. Las lineas dentro de la “caja” solo son validas bajo la suposicion temporal de la validez de \\displaystyle A , en el contexto de la demostracion auxiliar. No son validas en la demostracion principal. Ejemplo. Demostrar la validez de \\displaystyle\\{p\\rightarrow q,p\\rightarrow r\\}\\vdash p\\rightarrow q\\wedge r . 1.​ \\displaystyle p\\rightarrow q Premisa 2.​ \\displaystyle p\\rightarrow r Premisa 3.​ \\displaystyle p Pr aux 4.​ \\displaystyle q\\quad E\\to,1,3 5.​ \\displaystyle r\\quad E\\to,2,3 6.​ \\displaystyle q\\wedge r\\quad I\\wedge,4,5 7.​ \\displaystyle p\\to q\\wedge r\\quad I\\to(3-6) Definición 15.8 (Regla de introduccion de la negacion, \\displaystyle I\\neg ). \\displaystyle\\begin{array}[]{c}A\\rightarrow B\\wedge\\neg B\\\\ \\hline\\cr\\neg A\\end{array} Observación. El uso tipico de la regla \\displaystyle I\\neg es para demostraciones que modelan la reduccion al absurdo. Si quiero demostrar \\displaystyle A , supongo \\displaystyle\\neg A como premisa auxiliar de una demostracion auxiliar en la que trato de llegar como conclusion a \\displaystyle B\\wedge\\neg B para una formula cualquiera \\displaystyle B . A partir de ahi, deduzco \\displaystyle A : \\displaystyle\\neg A\\qquad\\qquad\\text{Premisa auxiliar} \\displaystyle\\vdots \\displaystyle B\\wedge\\neg B \\displaystyle\\begin{array}[]{lr}\\neg A\\rightarrow B\\wedge\\neg B&I\\rightarrow\\\\ \\neg\\neg A&I\\neg\\\\ A&E\\neg\\end{array} Ejemplo. Demostrar la validez de \\displaystyle\\{p\\rightarrow q,q\\rightarrow r,\\neg r\\}\\vdash\\neg p . Definición 15.9 (Regla de eliminacion de la disyuncion, \\displaystyle E\\vee ). \\displaystyle\\begin{array}[]{c}A\\vee B\\\\ A\\rightarrow C\\\\ B\\rightarrow C\\\\ \\hline\\cr C\\end{array} Observación. El uso tipico de la regla \\displaystyle E\\vee es para demostraciones que modelan el uso de la tecnica de la demostracion por casos. Si quiero demostrar \\displaystyle C y tengo como hipotesis \\displaystyle A\\vee B , primero supongo \\displaystyle A como premisa auxiliar de una demostracion auxiliar en la que trato de llegar como conclusion a \\displaystyle C . A continuacion hago lo mismo suponiendo \\displaystyle B como premisa auxiliar. Ejemplo. Demostrar la validez de \\displaystyle\\{p\\rightarrow q,q\\rightarrow s,p\\vee q\\}\\vdash r\\vee s Ejemplo. Demostrar la validez de \\displaystyle\\{p\\rightarrow(q\\rightarrow r)\\}\\vdash q\\rightarrow(p\\rightarrow r) . Previous page Next page"],[["index.html","Pt4.html","S16.html"],"16 Teorema de la deduccion ‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica","Skip to content. Teorema de la deduccion 16 Teorema de la deduccion Ejemplo. Demostrar la validez de \\displaystyle\\{p\\rightarrow r\\wedge s,r\\rightarrow q\\}\\vdash p\\rightarrow q\\wedge s . Ejemplo. Demostrar la validez de \\displaystyle\\{p\\rightarrow r\\wedge s,r\\rightarrow q,p\\}\\vdash q\\wedge s . Teorema 16.1 (de la deduccion). Sean \\displaystyle n\\geq 1 y \\displaystyle\\varphi_{1},\\varphi_{2},\\ldots,\\varphi_{n},\\varphi una coleccion de formulas. Entonces \\displaystyle\\{\\varphi_{1},\\varphi_{2},\\ldots,\\varphi_{n}\\}\\vdash\\varphi si y solo si \\displaystyle\\{\\varphi_{1},\\varphi_{2},\\ldots,\\varphi_{n-1}\\}\\vdash\\varphi_{n}\\rightarrow\\varphi Demostración. \\displaystyle\\Rightarrow) Si tengo una demostracion \\displaystyle\\begin{array}[]{c}\\varphi_{1}\\\\ \\vdots\\\\ \\varphi_{n}\\\\ \\alpha_{1}\\\\ \\vdots\\\\ \\alpha_{m}\\\\ \\varphi\\end{array}\\Rightarrow\\begin{array}[]{c}\\varphi_{1}\\\\ \\vdots\\\\ \\varphi_{n-1}\\\\ \\varphi_{n}\\text{ \\small Pr aux}\\\\ \\alpha_{1}\\\\ \\vdots\\\\ \\alpha_{m}\\\\ \\varphi\\\\ \\varphi_{n}\\rightarrow\\varphi\\\\ \\text{Demostracion del 2}\\end{array} \\displaystyle\\Leftarrow) \\displaystyle\\begin{array}[]{c}\\varphi_{1}\\\\ \\vdots\\\\ \\varphi_{n-1}\\\\ \\beta\\\\ \\vdots\\\\ \\beta_{m}\\\\ \\varphi_{n}\\rightarrow\\varphi\\end{array}\\Rightarrow\\begin{array}[]{c}\\varphi_{% 1}\\\\ \\vdots\\\\ \\varphi_{n-1}\\\\ \\varphi_{n}\\\\ \\beta_{1}\\\\ \\vdots\\\\ \\beta_{m}\\\\ \\varphi_{n}\\rightarrow\\varphi\\\\ \\varphi E\\rightarrow a,b\\end{array} ∎ Observación. No se puede demostrar que un razonamiento es incorrecto con Gentzen. Observación. El teorema de la deduccion permite transformar cualquier razonamiento valido del sistema de Gentzen en un teorema de ese sistema. Por ejemplo, si \\displaystyle\\{\\varphi_{1},\\varphi_{2}\\}\\vdash\\varphi es un razonamiento valido, entonces \\displaystyle\\vdash\\varphi_{1}\\rightarrow(\\varphi_{2}\\rightarrow\\varphi) es un teorema. Previous page Next page"],[["index.html","Pt4.html","S17.html"],"17 Reglas derivadas en el sistema de Gentzen ‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica","Skip to content. Reglas derivadas en el sistema de Gentzen 17 Reglas derivadas en el sistema de Gentzen Teorema 17.1 (Modus tollens, MT). \\displaystyle\\{A\\rightarrow B,\\neg B\\}\\vdash\\neg A Demostración. \\displaystyle A,B formulas cualesquiera. Cons: \\displaystyle\\neg A 1.​ \\displaystyle A\\rightarrow B Pr 2.​ \\displaystyle\\neg B Pr 3.​ \\displaystyle A Pr aux 4.​ \\displaystyle B\\quad E\\rightarrow 3,1 5.​ \\displaystyle B\\wedge\\neg\\quad I\\wedge 4,2 6.​ \\displaystyle A\\rightarrow B\\wedge\\neg B\\quad I\\rightarrow(3-5) 7.​ \\displaystyle\\neg A\\quad I\\neg,6 ∎ Teorema 17.2 (Teorema de la identidad, TI). \\displaystyle\\{A\\}\\vdash A Usando el Teorema de deduccion puede reformularse como \\displaystyle\\vdash A\\rightarrow A Demostración. 1.​ \\displaystyle A Pr 2.​ \\displaystyle\\neg A Pr aux 3.​ \\displaystyle A\\wedge\\neg A\\quad I\\wedge,2,1 4.​ \\displaystyle\\neg A\\rightarrow A\\wedge\\neg A\\quad I\\rightarrow(2-3) 5.​ \\displaystyle\\neg\\neg A\\quad I\\neg,4 6.​ \\displaystyle A\\quad E\\neg,5 ∎ Teorema 17.3 (Excontradictione quodlibet, EQ). \\displaystyle\\{A\\wedge\\neg A\\}\\vdash B Demostración. 1.​ \\displaystyle A\\wedge\\neg A Pr 2.​ \\displaystyle\\neg B Pr aux 3.​ \\displaystyle A\\wedge\\neg A 4.​ \\displaystyle\\neg B\\to A\\wedge\\neg A\\quad I\\to(2,-3) 5.​ \\displaystyle\\neg\\neg B\\quad I\\neg,4 6.​ \\displaystyle B\\quad ∎ Teorema 17.4 (Tollendo ponens, TP). \\displaystyle\\{A\\vee B,\\neg A\\}\\vdash B Demostración. 1.​ \\displaystyle A\\vee B Pr 2.​ \\displaystyle\\neg A Pr 3.​ \\displaystyle A Pr aux 4.​ \\displaystyle A\\wedge\\neg A\\quad I\\wedge,1,2 5.​ \\displaystyle B\\quad EQ,4 6.​ \\displaystyle A\\to B\\quad I\\to(3-6) 7.​ \\displaystyle B Pr aux 8.​ \\displaystyle B\\to B\\quad I\\to(7) 9.​ \\displaystyle B\\quad E\\vee,1,6,8 ∎ Ejemplo. Uso de reglas derivadas en una demostracion: \\displaystyle\\{p\\to t\\vee r,p\\vee q,q\\to t,\\neg t\\wedge s\\}\\vdash r\\wedge s Cons: \\displaystyle r\\wedge s 1.​ \\displaystyle p\\to t\\vee r Pr 2.​ \\displaystyle p\\vee q Pr 3.​ \\displaystyle q\\to t Pr 4.​ \\displaystyle\\neg t\\wedge s Pr 5.​ \\displaystyle\\neg t\\quad E\\wedge,4 6.​ \\displaystyle\\neg q\\quad MT,5,3 7.​ \\displaystyle p\\quad TP,6,2 8.​ \\displaystyle t\\vee r\\quad E\\to,7,1 9.​ \\displaystyle r\\quad TP,8,5 10.​ \\displaystyle s\\quad E\\wedge,4 11.​ \\displaystyle r\\wedge s\\quad I\\wedge,9,10 Teorema 17.5 (Doble negacion, DN). \\displaystyle\\{A\\}\\vdash\\neg\\neg A Teorema 17.6 (Contraposicion, CP). Son dos reglas que establecen la “equivalencia” entre dos formulas en este sistema formal. \\displaystyle\\{A\\to B\\}\\vdash\\neg B\\to\\neg A \\displaystyle\\{\\neg B\\to\\neg A\\}\\vdash A\\to B Demostración. 1.​ \\displaystyle A\\to B Pr 2.​ \\displaystyle\\neg B Pr aux 3.​ \\displaystyle\\neg A\\quad MT,1,2 4.​ \\displaystyle\\neg B\\to\\neg A\\quad I\\to(2-3) 1.​ \\displaystyle\\neg B\\to\\neg A 2. ∎ Teorema 17.7 (Leyes de De Morgan, DM). Cuatro reglas: \\displaystyle\\{\\neg(A\\vee B)\\}\\vdash\\neg A\\wedge\\neg B \\displaystyle\\{\\neg A\\wedge\\neg B\\}\\vdash\\neg(A\\vee B) \\displaystyle\\{\\neg(A\\wedge B)\\}\\vdash\\neg A\\vee\\neg B \\displaystyle\\{\\neg A\\vee\\neg B\\}\\vdash\\neg(A\\wedge B) Demostración. DM1: 1.​ \\displaystyle\\neg(A\\vee B) Pr 2.​ \\displaystyle A Pr aux 3.​ \\displaystyle A\\vee B\\quad I\\vee,2 4.​ \\displaystyle(A\\vee B)\\wedge\\neg(A\\vee B)\\quad I\\wedge,1,3 5.​ \\displaystyle A\\to(A\\vee B)\\wedge\\neg(A\\vee B)\\quad I\\to(2-4) 6.​ \\displaystyle\\neg A\\quad I\\neg,5 6.​ \\displaystyle B Pr aux 7.​ \\displaystyle A\\vee B\\quad I\\vee,6 8.​ \\displaystyle(A\\vee B)\\wedge\\neg(A\\vee B)\\quad I\\wedge,1,7 9.​ \\displaystyle\\neg BI\\to,I\\neg(6-8) 10.​ \\displaystyle\\neg A\\wedge\\neg B\\quad I\\wedge,5,9 DM2: 1.​ \\displaystyle\\neg A\\wedge\\neg B Pr 2.​ \\displaystyle A\\vee B Pr aux 3.​ \\displaystyle\\neg A\\quad E\\wedge,1 4.​ \\displaystyle B\\quad TP,2,3 5.​ \\displaystyle\\neg B\\quad E\\wedge,1 6.​ \\displaystyle B\\wedge\\neg B\\quad I\\wedge,4,5 7.​ \\displaystyle\\neg(A\\vee B)\\quad I\\to,I\\neg(2-6) DM3: 1.​ \\displaystyle\\neg(A\\wedge B) Pr 2.​ \\displaystyle\\neg(\\neg A\\vee\\neg B) Pr aux 3.​ \\displaystyle\\neg\\neg A\\wedge\\neg\\neg B\\quad DM,1,2 4. 4.​ \\displaystyle\\neg\\neg A\\quad E\\wedge,3 5.​ \\displaystyle A\\quad E\\neg,4 6.​ \\displaystyle\\neg\\neg B\\quad E\\wedge,3 7.​ \\displaystyle B\\quad E\\neg,6 8.​ \\displaystyle A\\wedge B\\quad I\\wedge,5,7 9.​ \\displaystyle(A\\wedge B)\\wedge\\neg(A\\wedge B)\\quad I\\wedge,1,8 10.​ \\displaystyle\\neg A\\vee\\neg B\\quad I\\to,I\\neg,E\\neg(2-9) DM4: 1.​ \\displaystyle\\neg A\\vee\\neg B Pr 2.​ \\displaystyle A\\wedge B Pr aux 3.​ \\displaystyle A\\quad E\\wedge,2 4.​ \\displaystyle\\neg B\\quad TP,3,1 5.​ \\displaystyle B\\quad E\\wedge,2 6.​ \\displaystyle B\\wedge\\neg B\\quad I\\wedge,5,4 7.​ \\displaystyle\\neg(A\\wedge B)\\quad I\\to,I\\neg(2-6) ∎ Teorema 17.8 (Interdefinicion). Cuatro reglas: \\displaystyle\\{A\\to B\\}\\vdash\\neg A\\vee B Previous page Next page"],[["index.html","Pt4.html","S18.html"],"18 Correccion, completitud y decidibilidad ‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica‣ Parte IV Teoria de la demostracion para logica proposicional ‣ Lógica","Skip to content. Correccion, completitud y decidibilidad 18 Correccion, completitud y decidibilidad Definición 18.1. Todo sistema de demostracino formal se puede ver como un modelo formal de cierto ambito (usualmente formado por objetos matematicos). Decimos que un sistema formal es  ​Correcto si todo teorema del sistema formal es una afirmacion verdadera en el ambito que se esta modelando.  ​Completo si toda afirmacion verdadera en el ambito que se esta modelando es un teorema del sistema formal.  ​Decidible si existe un procedimiento algoritmico finito para determinar si una formula es un teorema del sistema formal. Ejemplo. El sistema formal de Gentzen es un modelo formal de la logica proposicional, vista en el Tema 3 (sin incluir los simbolos \\displaystyle\\top y \\displaystyle\\perp ). Teorema 18.1. El sistema de Gentzen es correcto: todo teorema del sistema de Gentzen es una tautologia de la logica proposicional. Demostración. No la hacemos con detalle. Es facil: se debe, basicamente, a que todas las 8 reglas de inferencia son razonamientos validos en logica proposicional. ∎ Teorema 18.2. El sistema de Gentzen es completo: toda tautologia de la logica proposicional es un teorema del sistema de Gentzen. Demostración. No la hacemos. ∎ Teorema 18.3. El sistema de Gentzen es decidible. Ejemplo. El sistema formado por la sintaxis de la logica proposicional, sin axiomas y con las reglas de inferencia:  ​ \\displaystyle I\\neg,E\\neg,I\\wedge,E\\wedge,I\\vee,I\\to,E\\to  ​ \\displaystyle E\\vee^{\\prime}:\\{A\\vee B\\}\\vdash A,\\{A\\vee B\\}\\vdash B no es correcto. Ejemplo. El sistema formado por la sintaxis de la logica proposicional, sin axiomas y con las reglas de inferencia:  ​ \\displaystyle I\\neg,E\\neg,I\\wedge,E\\wedge,I\\vee,I\\to,E\\to no es completo. Ejemplo. Asumamos que ya sabemos que el sistema de Gentzen es correcto y completo. Demostrar que el siguiente sistema es completo: El sistema formado por la sintaxis de la logica proposicional, sin axiomas y con las reglas de inferencia:  ​ \\displaystyle I\\neg,E\\neg,I\\wedge,E\\wedge,I\\vee,I\\to,E\\to  ​ \\displaystyle TP:\\{A\\vee B,\\neg B\\}\\vdash A,\\{A\\vee B,\\neg A\\}\\vdash B . Obs: el sistema de con las 7 reglas y TP es correcto. Si fuera incorrecto, podria demostrar un teorema que no fuera tautologia usando esas reglas, pero como TP es demostrar en Gentzen, eso implicaria que Gentzen es incorrecto. Tenemos que ver que el sistema propuesto es completo. Para ello, basta con ver que \\displaystyle E\\vee se puede demostrar en este sistema y luego usar que Gentzen es completo. En el sistema nuevo: 1.​ \\displaystyle A\\rightarrow C Pr 2.​ \\displaystyle B\\rightarrow C Pr 3.​ \\displaystyle A\\vee B Pr 4.​ \\displaystyle\\neg C Pr aux 5.​ \\displaystyle\\neg A\\quad MT4,1 (MT es valido en el sistema nuevo) 6.​ \\displaystyle B\\quad TP,3,5 7.​ \\displaystyle C\\quad E\\rightarrow,6,2 8.​ \\displaystyle C\\wedge\\neg C\\quad I\\wedge,4,7 9.​ \\displaystyle\\neg C\\rightarrow C\\wedge\\neg C\\quad I\\rightarrow(4-8) 10.​ \\displaystyle\\neg\\neg C\\quad I\\neg,9 11.​ \\displaystyle C\\quad E\\neg,10 Previous page Next page"],[["index.html","Pt5.html","S19.html"],"19 Introduccion intuitiva a la formalizacion ‣ Parte V Sintaxis de la logica de predicados ‣ Lógica‣ Parte V Sintaxis de la logica de predicados ‣ Lógica","Skip to content. Introduccion intuitiva a la formalizacion 19 Introduccion intuitiva a la formalizacion IDEA: Ampliar la logica proposicional para poder formalizar (y demostrar la correccion) de razonamientos del tipo: “Socrates es humano. Todo humano es mortal. Por tanto, Socrates es mortal.” Formalizacion con proposicional: \\displaystyle p\\wedge q\\rightarrow r que no es un razonamiento correcto. Con logica de predicados: Dominio:  ​ \\displaystyle D=\\{\\text{humanos y dioses de la antiguedad griega}\\} Simbolos:  ​ \\displaystyle s: Socrates (s es una constante).  ​ \\displaystyle H(x): \\displaystyle x es humano ( \\displaystyle H es un simbolo de predicado de aridad 1).  ​ \\displaystyle M(x): \\displaystyle x es mortal ( \\displaystyle M es un simbolo de predicado de aridad 1) Formalizacion: \\displaystyle\\begin{array}[]{l}H(s)\\\\ \\forall x(H(x)\\to M(x))\\\\ \\hline\\cr M(s)\\end{array} Ejemplo. Vamos a formalizar las sigueintes frases con logica de predicados en el dominio formado por las personas. Dominio: \\displaystyle D=\\{\\text{personas}\\} Simbolos:  ​ \\displaystyle a : Antonio ( \\displaystyle a es una constante).  ​ \\displaystyle b : Barbara ( \\displaystyle b es una constante).  ​ \\displaystyle M(x):x es moreno ( \\displaystyle M es un simbolo de predicado de aridad 1).  ​ \\displaystyle R(x):x es rubio ( \\displaystyle R es un simbolo de predicado de aridad 1). Formalizaciones:  ​ \\displaystyle M(a) : Antonio es moreno.  ​ \\displaystyle R(b) : Barbara es rubia.  ​ \\displaystyle\\forall xM(x)  ​ \\displaystyle\\exists xR(x) Simbolos:  ​ \\displaystyle S(x) : \\displaystyle x es sevillano ( \\displaystyle S es un simbolo de predicado de aridad 1).  ​ \\displaystyle T(x) : \\displaystyle x es toledano ( \\displaystyle T es un simbolo de predicado de aridad 1).  ​ \\displaystyle m(x) : la madre de \\displaystyle x ( \\displaystyle m es un simbolo de predicado de aridad 1). Formalizaciones:  ​Todos los sevillanos son morenos: \\displaystyle\\forall x(S(x)\\to M(x))  ​Hay toledanos rubios: \\displaystyle\\exists x(T(x)\\wedge R(x))  ​La madre de Antonio es rubia: \\displaystyle R(m(a))  ​Barbara es la madre de Antonio: \\displaystyle b=m(a) . Simbolos:  ​ \\displaystyle A(x,y) : \\displaystyle x es mas alto que \\displaystyle y ( \\displaystyle A es un simbolo de pred. de aridad 2 ) Formalizaciones:  ​Antonio es mas alto que Barbara: \\displaystyle A(a,b)  ​Todo el mundo es mas alto que Barbara: \\displaystyle\\forall xA(x,b)  ​Hay gente rubia mas alta que la madre de Antonio: \\displaystyle\\exists x(R(x)\\wedge A(x,m(a))) Previous page Next page"],[["index.html","Pt1.html","S2.html"],"2 Relaciones ‣ Parte I Conjuntos, relaciones y funciones ‣ Lógica‣ Parte I Conjuntos, relaciones y funciones ‣ Lógica","Skip to content. Relaciones 2 Relaciones Definición 2.1 (Relacion binaria de dos conjuntos). Sean \\displaystyle A y \\displaystyle B dos conjuntos no vacios. Una relacion binaria entre \\displaystyle A y \\displaystyle B es un subconjunto \\displaystyle R\\subseteq A\\times B . Definición 2.2 (Relacion binaria en un conjunto). Sea \\displaystyle A un conjunto no vacio. Una relacion binaria en \\displaystyle A es ub subconjunto \\displaystyle R\\subseteq A\\times A . Sea \\displaystyle R una relacion entre dos conjuntos \\displaystyle A y \\displaystyle B . Si \\displaystyle(a,b)\\in R decimos que a esta relacionado con b por \\displaystyle R y escribimos: \\displaystyle aRb Ejemplo. \\displaystyle A\\times B={1,2,3}\\times{2,4} . Una relacion es \\displaystyle R_{1}=\\{(1,2),(1,4)\\} o \\displaystyle R_{2}=\\{(1,2),(2,2),(3,4)\\} . El producto cartesiano \\displaystyle A\\times B o \\displaystyle\\varnothing tambien son relaciones. Observación. Como \\displaystyle A\\times B tiene \\displaystyle 6 elementos, puedo encontrar \\displaystyle 2^{6}=64 relaciones distintas (porque \\displaystyle A\\times B tiene 64 subconjuntos distintos). Definición 2.3 (Dominio, imagen). Sea \\displaystyle R una relacion binaria entre dos conjuntos \\displaystyle A y \\displaystyle B . Se definen  ​Dominio de \\displaystyle R como \\displaystyle dom(R)\\coloneqq\\{a\\in A\\mid\\exists b\\in B\\mid aRb\\}  ​Imagen o rango de \\displaystyle R como \\displaystyle im(R)\\coloneqq\\{b\\in B\\mid\\exists a\\in A\\mid aRb\\} Definición 2.4. Sea \\displaystyle R una relacion binaria entre dos conjuntos \\displaystyle A y \\displaystyle B . Sean \\displaystyle C\\subseteq A y \\displaystyle D\\subseteq B . Se definen:  ​Imagen inversa de \\displaystyle D por \\displaystyle R como \\displaystyle R^{-1}(D)\\coloneqq\\{a\\in A\\mid\\exists b\\in D\\mid aRb\\}  ​Imagen o imagen directa de \\displaystyle C por \\displaystyle R como \\displaystyle R(C)\\coloneqq\\{b\\in B\\mid\\exists a\\in C\\mid aRb\\} Observación. \\displaystyle dom(R)=R^{-1}(B) \\displaystyle im(R)=R(A) Ejemplo. Sean \\displaystyle A=\\{1,3,5\\} , \\displaystyle B=\\{2,3\\} , \\displaystyle C=\\{1,3\\}\\subseteq A , \\displaystyle D=\\{2\\}\\subseteq B .  ​ \\displaystyle R_{1}=\\{(1,2),(3,2),(3,3)\\} \\displaystyle dom(R_{1})=\\{1,3\\},\\,im(R_{1})=\\{2,3\\},\\,R^{-1}_{1}(D)=\\{1,3\\},% \\,R_{1}(C)=\\{2,3\\}  ​ \\displaystyle R_{2}=\\{(1,2),(3,3),(5,2)\\} - Funcion. \\displaystyle dom(R_{2})=A,im(R_{2})=B,R^{-1}_{2}(D)=\\{1,5\\},R_{2}(C)=\\{2,3\\}=B En total habia \\displaystyle 2^{6} relaciones entre \\displaystyle A y \\displaystyle B . Ejemplo. Sean \\displaystyle A=\\{1,2,4,5\\} , \\displaystyle C=\\{2,5\\}\\subseteq A .  ​ \\displaystyle R_{1}=\\{(x,y)\\mid x=y\\} \\displaystyle dom(R_{1})=A,im(R_{1})=A,R^{-1}_{1}(C)=\\{2,5\\}=C,R_{1}(C)=\\{2,5% \\}=C  ​ \\displaystyle R_{2}=\\{(x,y)\\mid x\\neq y\\}=A^{2}\\setminus R_{1} \\displaystyle dom(R_{2})=A,im(R_{2})=A,R^{-1}_{2}(C)=A,R_{2}(C)=A  ​ \\displaystyle R_{3}=\\{(x,y)\\mid x<y\\} \\displaystyle dom(R_{3})=\\{1,2,4\\},im(R_{4})=\\{2,4,5\\},R^{-1}_{3}(C)=\\{1,2,4\\}% ,R_{3}(C)=\\{4,5\\}  ​ \\displaystyle R_{4}=\\{(x,y)\\mid x\\leq y\\}=R_{1}\\cup R_{3} \\displaystyle dom(R_{4})=A,im(R_{4})=A,R^{-1}_{4}(C)=A,R_{4}(C)=\\{2,4,5\\}  ​ \\displaystyle R_{5}=\\{(x,y)\\mid x\\text{ es divisor de }y\\}=\\{(1,1),(1,2),(1,4)% ,(1,5),(2,2),(2,4),(4,4),(5,5)\\} \\displaystyle dom(R_{5})=A,im(R_{5})=A,R^{-1}_{5}(C)=\\{2,4,5\\},R_{5}(C)=\\{2,4,5\\}  ​ \\displaystyle R_{6}=\\{(1,1),(1,4),(2,4)\\} \\displaystyle dom(R_{6})=\\{1,2\\},im(R_{6})=\\{1,4\\},R^{-1}_{6}(C)=\\varnothing,R% _{6}(C)=\\{4\\} Definición 2.5. Sean \\displaystyle P y \\displaystyle Q dos enunciados. La notacion \\displaystyle P\\Rightarrow Q se lee “ \\displaystyle P implica \\displaystyle Q ”. El unico caso en el que es falsa es cuando sucede \\displaystyle P y no sucede \\displaystyle Q . Esta situacion supone un contraejemplo a la implicacion. La notacion \\displaystyle P\\Leftrightarrow Q se lee “ \\displaystyle P si y solo si \\displaystyle Q ” o “ \\displaystyle P es equivalente a \\displaystyle Q ” y quiere decir que \\displaystyle P\\Rightarrow Q y \\displaystyle Q\\Rightarrow P simultaneamente. Es falsa si sucede una de las dos afirmaciones y no la otra. Definición 2.6. Sean \\displaystyle A un conjunto no vacio y \\displaystyle R una relacion binaria en \\displaystyle A . Decimos que \\displaystyle R cumple la propiedad  ​Reflexiva si \\displaystyle\\forall x\\in A\\;(xRx)  ​Simetrica si \\displaystyle\\forall x,y\\in A\\;(xRy\\Rightarrow yRx)  ​Antisimetrica si \\displaystyle\\forall x,y\\in A\\;(xRy,x\\neq y\\Rightarrow y\\cancel{R}z) También se puede formular: \\displaystyle\\forall x,y\\in A\\;(xRy,yRx\\Rightarrow x=y)  ​Transitiva si \\displaystyle\\forall x,y,z\\in A\\;(xRy,yRz\\Rightarrow xRz) Definición 2.7. Sean \\displaystyle A un conjunto no vacio y \\displaystyle R una relacion binaria en \\displaystyle A . Decimos que \\displaystyle R es una relacion de  ​Equivalencia si cumple las propiedades reflexiva, simetrica y transitiva.  ​Orden si cumple las propiedades reflexiva, antisimetrica y transitiva.  ​Orden total si es de orden y ademas \\displaystyle\\forall x,y\\in A\\;(xRy\\text{ o }yRx) Ejemplo. Sea \\displaystyle A=\\{a,b,c,d\\} . Para cada una de las siguientes relaciones \\displaystyle R_{i} en \\displaystyle A , estudia si cumplen las propiedades reflexiva, simetrica, antisimetrica y transitiva. Tambien si son de equivalencia, orden y orden total.  ​ \\displaystyle R_{1}=\\{(a,b),(b,c)\\}  ​ \\displaystyle R_{2}=\\{(a,a),(b,b),(c,c),(a,b),(b,a),(b,c)\\}  ​ \\displaystyle R_{3}=\\{(a,b),(c,d),(d,c)\\}  ​ \\displaystyle R_{4}=A\\times A  ​ \\displaystyle R_{5}=\\varnothing  ​ \\displaystyle R_{6}=\\{(x,y)\\mid x=y\\}  ​ \\displaystyle R_{7}=R_{6}\\cup\\{(a,b),(b,a),(c,d),(d,c)\\}  ​ \\displaystyle R_{8}=\\{(x,y)\\mid x\\text{ va antes que }y\\text{ en el alfabeto}\\}  ​ \\displaystyle R_{9}=R_{6}\\cup R_{8}  ​ \\displaystyle R_{10}=R_{6}\\cup\\{(a,b),(c,d)\\} Solucion:  ​ \\displaystyle R_{1}=\\{(a,b),(b,c)\\} No es reflexiva porque \\displaystyle a\\cancel{R}a (contraejemplo). Por tanto no es de equivalencia ni de orden y, por tanto, no es de orden total. Tampoco es simetrica porque \\displaystyle aRb pero \\displaystyle b\\cancel{R}a . \\displaystyle R_{1} es antisimetrica porque se cumple la definicion. Por ultimo, no es transitiva porque \\displaystyle aRb y \\displaystyle bRc pero \\displaystyle a\\cancel{R}c .  ​ \\displaystyle R_{2}=\\{(a,a),(b,b),(c,c),(a,b),(b,a),(b,c)\\} \\displaystyle R_{2} no es reflexiva (contraejemplo: \\displaystyle d\\cancel{R}d ). Luego no es de equivalencia, orden ni orden total. No es simetrica porque \\displaystyle bRc pero \\displaystyle c\\cancel{R}b . Tampoco es antisimetrica porque \\displaystyle aRb,a\\neq b\\Rightarrow bRa . Por ultimo, no es simetrica porque \\displaystyle aRb y \\displaystyle bRc pero \\displaystyle a\\cancel{R}c .  ​ \\displaystyle R_{3}=\\{(a,b),(c,d),(d,c)\\} . No es reflexiva. Contraejemplo: \\displaystyle a\\cancel{R}a . No es simetrica porque \\displaystyle aRb pero \\displaystyle b\\cancel{R}a . No es antisimetrica porque \\displaystyle cRd y \\displaystyle dRc y \\displaystyle d\\neq c . No es transitiva porque \\displaystyle cRd y \\displaystyle dRc pero \\displaystyle c\\cancel{R}c .  ​ \\displaystyle R_{4}=A\\times A . Es reflexiva porque se cumple la definicion (todos los elementos de \\displaystyle A estan relacionados consigo mismos). Es simetrica (se cumple la definicion). No es antisimetrica: \\displaystyle aRb y \\displaystyle bRa . Es transitiva. Es una relacion de equivalencia.  ​ \\displaystyle R_{5}=\\varnothing . No es reflexiva, \\displaystyle a\\cancel{R}a . Es simetrica porque se cumple la definicion (no hay ningun contraejemplo). Tambien es antisimetrica y transitiva por la misma razon.  ​ \\displaystyle R_{6}=\\{(x,y)\\mid x=y\\}=\\{(a,a),(b,b),(c,c),(d,d)\\} . Es reflexiva ya que todos los elementos estan relacionados consigo mismos. Es simetrica y antisimetrica ( \\displaystyle xRy,yRx\\Rightarrow x=y ). Tambien es transitiva, ya que no hay ningun contraejemplo ( \\displaystyle xRy,yRz solo puede pasar si \\displaystyle x=y=z ). \\displaystyle R_{6} es una relacion de equivalencia y de orden. No es de orden total porque \\displaystyle a\\cancel{R}b y \\displaystyle b\\cancel{R}a .  ​ \\displaystyle R_{7}=R_{6}\\cup\\{(a,b),(b,a),(c,d),(d,c)\\} . Es reflexiva porque estan los pares de \\displaystyle R_{6} (es decir, \\displaystyle R_{6}\\subseteq R_{7} ). Es simetrica porque en los pares que he añadido no he metido contraejemplos. No es antisimetrica; un contraejemplo es \\displaystyle aRb,bRa . Es transitiva pues no se pueden encontrar contraejemplos. \\displaystyle R_{7} es de equivalencia. No es de orden y, por tanto, tampoco de orden total.  ​ \\displaystyle R_{8}=\\{(x,y)\\mid x\\text{ va antes que }y\\text{ en el alfabeto}\\} No es reflexiva. No es simetrica ( \\displaystyle aRb y \\displaystyle b\\cancel{R}a ). Es antisimetrica porque no hay contraejemplos. Es transitiva. Vamos a ver que es antisimetrica y transitiva solo con la definicion. Supongamos que \\displaystyle A es el alfabeto español. \\displaystyle|A|=27 y \\displaystyle R_{8} es la misma relacion. Si \\displaystyle\\alpha va antes que \\displaystyle\\beta , \\displaystyle\\beta va antes que \\displaystyle\\lambda , entonces \\displaystyle\\alpha va antes que \\displaystyle\\lambda . Luego si es transitiva. Si \\displaystyle\\alpha va antes que \\displaystyle\\beta ( \\displaystyle\\alpha R_{8}\\beta ) entonces \\displaystyle\\beta no va antes que \\displaystyle\\alpha , luego \\displaystyle(\\beta\\cancel{R}_{8}\\alpha) . Entonces es antisimetrica.  ​ \\displaystyle R_{9}=R_{6}\\cup R_{8}=\\{(\\alpha,\\beta)\\mid\\alpha\\text{ va antes % que }\\beta\\text{ o }\\alpha=\\beta\\} . Es reflexiva porque estan todos los pares de \\displaystyle R_{6} . No es simetrica porque \\displaystyle aRb pero \\displaystyle b\\cancel{R}a . Es antisimetrica: vamos a usar la definicion \\displaystyle\\alpha R_{9}\\beta,\\beta R_{9}\\alpha\\Rightarrow\\alpha=\\beta . \\displaystyle\\alpha va antes o es igual que \\displaystyle\\beta y \\displaystyle\\beta va antes o es igual que \\displaystyle\\alpha . La unica opcion es \\displaystyle\\alpha=\\beta . Por tanto es antisimetrica. Si \\displaystyle\\alpha va antes o es igual a \\displaystyle\\beta y \\displaystyle\\beta va antes o es igual a \\displaystyle\\gamma entonces \\displaystyle\\alpha va antes o es igual a \\displaystyle\\gamma . Luego si es transitiva. \\displaystyle R_{9} es de orden. Tambien es de orden total porque todos los elementos estan relacionados.  ​ \\displaystyle R_{10}=R_{6}\\cup\\{(a,b),(c,d)\\} Es reflexiva porque estan todos los pares de \\displaystyle R_{6} . No es simetrica porque \\displaystyle aRb pero \\displaystyle b\\cancel{R}a . Es antisimetrica. Es transitiva porque no se han añadido contraejemplos. \\displaystyle R_{10} es una relacion de orden. No es total ( \\displaystyle a\\cancel{R}_{10}c ). Ejemplo. \\displaystyle A=\\{\\text{conjunto formado por 9 boligrafos, dos rojos, tres % azules y 4 negros}\\} Dados \\displaystyle x,y\\in A , \\displaystyle xRy\\Leftrightarrow\\text{x es del mismo color que y} . Tambien se puede definir \\displaystyle R=\\{(x,y)\\mid\\text{x es del mismo color que y}\\} . Esta relacion es reflexiva: \\displaystyle\\forall x,x es del mismo color que \\displaystyle x . Tambien es simetrica: si \\displaystyle xRy (x es del mismo color que y), entonces \\displaystyle yRx (y es del mismo color que x). Por ultimo, es transitiva: \\displaystyle\\forall x,y,z si \\displaystyle x es del mismo color que \\displaystyle y , \\displaystyle y es del mismo color que \\displaystyle z , entonces \\displaystyle x es del mismo color que \\displaystyle z. Luego \\displaystyle R es de equivalencia. Una relacion de equivalencia genera una particion. A los elementos de la particion se les llama “clases de equivalencia”. En este caso, hay 3 clases de equivalencia: la de los bolis rojos, la de los bolis negros y la de los bolis azules: \\displaystyle\\displaystyle\\{B_{1},B_{2}\\} \\displaystyle\\displaystyle=[B_{2}] \\displaystyle\\displaystyle\\{B_{3},B_{4},B_{5}\\} \\displaystyle\\displaystyle=[B_{3}] \\displaystyle\\displaystyle\\{B_{6},B_{7},B_{8},B_{9}\\} \\displaystyle\\displaystyle=[B_{8}] \\displaystyle B_{2} , \\displaystyle B_{3} y \\displaystyle B_{8} son representantes de clase (elegidos de forma arbitraria). El conjunto cociente va a ser el conjunto formado por las clases de equivalencia \\displaystyle A/R=\\{[B_{2}],[B_{3}],[B_{8}]\\} . Definición 2.8 (Clase de equivalencia). Sea \\displaystyle R una relacion de equivalencia en un conjunto \\displaystyle A y sea \\displaystyle a\\in A . Llamamos clase de equivalencia de \\displaystyle a por la relacion \\displaystyle R al conjunto de todos los elementos de \\displaystyle A que estan relacionados con \\displaystyle a . Simbolicamente: \\displaystyle[a]_{R}\\coloneqq\\{b\\in A\\mid aRb\\} Si, por contexto, esta claro que solo podemos estar hablando de clases respecto de la relacion \\displaystyle R , omitiremos el subindice y escribiremos \\displaystyle[a] . Tambien se puede escribir \\displaystyle\\overline{a} . Definición 2.9 (Conjunto cociente). Sea \\displaystyle R una relacion de equivalencia en un conjunto \\displaystyle A . Llamamos conjunto cociente de \\displaystyle A bajo la relacion \\displaystyle R al conjunto formado por todas las clases de equivalencia de la relacion. Simbolicamente: \\displaystyle A/R\\coloneqq\\{[a]_{R}\\mid a\\in A\\} Ejemplo. \\displaystyle R_{4}=A\\times A . \\displaystyle A=\\{a,b,c,d\\} . \\displaystyle[a]_{R_{4}}=\\{a,b,c,d\\} . \\displaystyle[b]_{R_{4}}=\\{a,b,c,d\\} . Hay una unica clase de equivalencia. El cociente es \\displaystyle A/R=\\{[a]_{R_{4}}\\} . Otra relacion de equivalencia es \\displaystyle R_{6}=\\{(x,y)\\mid x=y\\} . En este caso, \\displaystyle[a]_{R_{6}}=\\{a\\},\\,[b]_{R_{6}}=\\{b\\},\\,[c]_{R_{6}}=\\{c\\},\\,[d]_{% R_{6}}=\\{d\\} . El conjunto cociente esta formado por 4 elementos: \\displaystyle A/R_{6}=\\{[a]_{R_{6}},[b]_{R_{6}},[c]_{R_{6}},[d]_{R_{6}}\\}. \\displaystyle R_{7}=R_{6}\\cup\\{(a,b),(b,a),(c,d),(d,c)\\} . En este caso, hay 2 clases: \\displaystyle[a]_{R_{7}}=\\{a,b\\}=[b]_{R_{7}} y \\displaystyle[c]_{R_{7}}=\\{b,c\\}=[c]_{R_{7}} . El conjunto cociente es \\displaystyle A/R_{7}=\\{[a]_{R_{7}},[d]_{R_{7}}\\} . Otro ejemplo es \\displaystyle R=S\\cup\\{(a,b),(b,a),(a,c),(c,a),(b,c),(c,b)\\} , siendo \\displaystyle S la relacion de igualdad. Se puede demostrar que es una relacion de equivalencia. Las clases de equivalencia son \\displaystyle[a]_{R}=\\{a,b,c\\}=[b]_{R}=[c]_{R} y \\displaystyle[d]_{R}=\\{d\\} . El conjunto cociente es \\displaystyle A/R=\\{[a]_{R},[d]_{R}\\} . Proposición 2.1. Sean \\displaystyle R una relacion de equivalencia en un conjunto \\displaystyle A y \\displaystyle a,b\\in A . Se cumple:  ​ \\displaystyle aRb\\Rightarrow[a]=[b] .  ​ \\displaystyle a\\cancel{R}b\\Rightarrow[a]\\cap[b]=\\varnothing . Demostración. Sean \\displaystyle a,b\\in A .  ​Si \\displaystyle aRb : Tenemos que demostrar que \\displaystyle[a]=[b] . Para ello, vamos a ver un doble contenido de conjuntos. \\displaystyle\\subseteq) Vamos a ver que \\displaystyle[a]\\subseteq[b] . \\displaystyle[a]=\\{x\\in A\\mid aRx\\} y \\displaystyle[b]=\\{x\\in B\\mid bRx\\} . Sea \\displaystyle x\\in[a]\\Rightarrow aRx . Como \\displaystyle aRx y \\displaystyle R es simetrica (por ser una relacion de equivalencia), tenemos que \\displaystyle xRa . Como \\displaystyle xRa y \\displaystyle aRb , por ser \\displaystyle R transitiva, tengo que \\displaystyle xRb\\overset{R\\text{ simetrica}}{\\Rightarrow}bRx\\Rightarrow x\\in[b] . \\displaystyle\\supseteq) Sea \\displaystyle x\\in[b]\\Rightarrow bRx . Como \\displaystyle aRb y \\displaystyle R es transitiva, \\displaystyle aRx\\Rightarrow x\\in[a] .  ​Si \\displaystyle a\\cancel{R}b : Tenemos que demostrar que \\displaystyle[a]\\cap[b]=\\varnothing . Por reduccion al absurdo, supongamos que \\displaystyle[a]\\cap[b]\\neq\\varnothing\\Rightarrow\\exists x\\in[a]\\text{ y }x\\in% [b] . Sin embargo, \\displaystyle x\\in[a]\\Rightarrow aRx y \\displaystyle x\\in[b]\\Rightarrow bRx\\Rightarrow xRb\\text{ (R simetrica)} . Como \\displaystyle aRx,xRb y \\displaystyle R es transitiva entonces \\displaystyle aRb . Hemos llegado a una contradiccion porque partimos de que \\displaystyle a\\cancel{R}b . Por tanto, \\displaystyle[a]\\cap[b]=\\varnothing . ∎ Definición 2.10 (Conjuntos disjuntos). Sean \\displaystyle A y \\displaystyle B dos conjuntos. Decimos que son disjuntos si \\displaystyle A\\cap B=\\varnothing . Definición 2.11 (Partición). Sea \\displaystyle A un conjunto. Decimos que una coleccion de subconjuntos de \\displaystyle A constituye una particion de \\displaystyle A si se cumplen las dos condiciones siguientes:  ​Son disjuntos dos a dos: dos conjuntos diferentes cualesquiera de la coleccion son disjuntos.  ​Recubren \\displaystyle A : la union de todos ellos es \\displaystyle A . Teorema 2.1. Sea \\displaystyle R una relacion de equivalencia en un conjunto \\displaystyle A . Entonces las clases de equivalencia de \\displaystyle R constituyen una particion de \\displaystyle A . Demostración. En la proposicion 3 hemos demostrado que las clases de equivalencia son disjuntas dos a dos. Veamos que las clases recubren \\displaystyle A . Dado \\displaystyle a\\in A se cumple que por ser \\displaystyle R reflexiva que \\displaystyle aRa\\Rightarrow a\\in[a] . Luego todo elemento pertenece a una clase de equivalencia. ∎ Ejemplo. \\displaystyle A=\\{a,b,c,d\\} . Una particion es: \\displaystyle A_{1}=\\{a\\} \\displaystyle A_{2}=\\{b,d\\} \\displaystyle A_{3}=\\{c\\} . Defino \\displaystyle R como: \\displaystyle R=\\{(a,a),(b,b),(c,c),(d,d),(b,d),(d,b)\\} . Entonces \\displaystyle[a]=\\{a\\},[b]=\\{b,d\\},[c]=\\{c\\} . Dentro de cada conjunto de la particion he relacionado sus elementos de todas las formas posibles. Teorema 2.2. Supongamos que tenemos una particion de un conjunto \\displaystyle A . Definimos una relacion \\displaystyle R en \\displaystyle A de la siguiente forma: \\displaystyle aRb\\Leftrightarrow\\text{existe un subconjunto de la particion al% que }a\\text{ y }b\\text{ pertenecen} Entonces la relacion \\displaystyle R es de equivalencia. Ademas, las clases de equivalencia de \\displaystyle R coinciden con los subconjuntos de la particion. Demostración. Vamos a demostrar que \\displaystyle R es de equivalencia.  ​ \\displaystyle R es reflexiva? Dado \\displaystyle a\\in A , como la particion recubre \\displaystyle A existe un conjunto de la particion al que \\displaystyle a pertenece. Luego \\displaystyle a y \\displaystyle a estan en el mismo conjunto de la particion \\displaystyle\\Rightarrow aRa .  ​ \\displaystyle R es simetrica? \\displaystyle aRb\\Rightarrow a y \\displaystyle b estan en el mismo conjunto de la particion \\displaystyle\\Rightarrow bRa . Por tanto, \\displaystyle R es simetrica.  ​ \\displaystyle R es transitiva? \\displaystyle aRb,bRc\\Rightarrow a y \\displaystyle b estan en el mismo conjunto de la particion y \\displaystyle b y c estan en el mismo conjunto de la particion. Por lo tanto, \\displaystyle a y \\displaystyle c estan en el mismo conjunto y \\displaystyle aRc . Las clases de \\displaystyle R son los conjuntos de la particion por construccion. \\displaystyle[a]_{R}=\\{b\\mid aRb\\}=\\{b\\mid\\text{a y b estan en el mismo % conjunto de particion}\\} Luego es el conjunto de la particion al que \\displaystyle a pertenece. ∎ Ejemplo. Cuantas relaciones de equivalencia se pueden definir sobre un conjunto de 4 elementos? Demostración. Es lo mismo que contar cuantas particiones diferentes se pueden hacer de un conjunto de 4 elementos. Cuento por numero de “trozos”.  ​Con un subconjunto. Solo hay una particion que es tomar todo el conjunto.  ​Con 2 trozos. En total, hay 7 trozos (3 con 2 trozos iguales, 4 con un trozo de 1 elemento y otro de 3).  ​Con 3 trozos. Los trozos deben ser 2 de 1 elemento y otro de 2. Hay 6 distintas.  ​Con 4 trozos hay una unica forma. Hay \\displaystyle 1+7+6+1=15 relaciones de equivalencia distintas en \\displaystyle A . Ver: Numeros de Bell. ∎ Ejemplo. Dos relaciones de equivalencia importantes:  ​Construccion de los racionales.  ​Enteros modulo 2. Demostración.  ​Los numeros racionales como cociente. Si defino los racionales como \\displaystyle F=\\left\\{\\frac{a}{b}\\mid a,b\\in\\mathbb{Z},b\\neq 0\\right\\} : En el conjunto \\displaystyle F de fracciones vamos a definir una relacion \\displaystyle R tal que \\displaystyle\\frac{a}{b}R\\frac{c}{d}\\Leftrightarrow a\\cdot d=c\\cdot b Vamos a demostrar que \\displaystyle R es de equivalencia. •​ \\displaystyle R reflexiva: \\displaystyle\\forall a,b se cumple \\displaystyle\\frac{a}{b}R\\frac{a}{b} •​Simetrica: \\displaystyle\\forall\\frac{a}{b}\\cdot\\frac{c}{d} \\displaystyle\\frac{c}{d}R\\frac{a}{b}\\Rightarrow cb=ad\\Rightarrow\\frac{a}{b}R% \\frac{c}{d} •​Transitiva: \\displaystyle\\forall\\frac{a}{b}\\cdot\\frac{c}{d}\\cdot\\frac{e}{f} \\displaystyle\\frac{a}{b}R\\frac{c}{d},\\frac{c}{d}R\\frac{e}{f}\\Rightarrow\\frac{a% }{b}R\\frac{e}{f}? \\displaystyle\\frac{a}{b}R\\frac{c}{d}\\Rightarrow ad=cb , \\displaystyle\\frac{c}{d}R\\frac{e}{f}\\Rightarrow cf=de Debemos llegar a que \\displaystyle af=eb adf=cbf\\Rightarrow adf=deb Como d es un denominador, implica que \\displaystyle d\\neq 0 y puedo dividir ambos enteros entre \\displaystyle d \\displaystyle\\Rightarrow af=eb . Luego la relacion \\displaystyle R es de equivalencia. Como son las clases? Por ejemplo: \\displaystyle\\left[\\frac{2}{3}\\right]=\\left\\{\\frac{2}{3},\\frac{6}{9},\\ldots,% \\frac{-2}{-3},\\frac{-4}{-6},\\ldots\\right\\} \\displaystyle|[\\frac{2}{3}]|=\\infty \\displaystyle F/R=\\{[\\frac{a}{b}]\\mid\\frac{a}{b}\\in F\\}=\\mathbb{Q} . Quien es \\displaystyle[\\frac{4}{6}] ? Luego en este cociente \\displaystyle[\\frac{2}{3}]=[\\frac{4}{6}] . Obs: \\displaystyle|Q|=\\infty .  ​Enteros modulo 2. \\displaystyle A=\\mathbb{Z} . Dados \\displaystyle x,y\\in\\mathbb{Z} , \\displaystyle xRy\\Leftrightarrow x-y es par. Es decir, \\displaystyle\\exists k\\in\\mathbb{Z} tal que \\displaystyle x-y=2k ( \\displaystyle x\\equiv y\\text{ mod }2 ) ( \\displaystyle x congruente con \\displaystyle y modulo 2). Veamos si esta relacion es de equivalencia: •​Reflexiva: \\displaystyle\\forall x\\in\\mathbb{Z},\\;x\\equiv x\\text{ mod }2? Si porque \\displaystyle x-x=2\\cdot 0=0 •​Simetrica: \\displaystyle\\forall x,y\\in\\mathbb{Z},\\;x\\equiv y\\text{ mod }2\\Rightarrow y% \\equiv x\\text{ mod }2? Si \\displaystyle x\\equiv y\\text{ mod }2\\Rightarrow\\exists k\\in\\mathbb{Z} tal que \\displaystyle x-y=2k\\Rightarrow y-x=2(-k)\\Rightarrow y\\equiv x\\text{ mod }2 . •​Transitiva: \\displaystyle\\forall x,y,z\\in\\mathbb{Z},\\;x\\equiv y\\text{ mod }2,y\\equiv z% \\text{ mod }2\\Rightarrow x\\equiv z\\text{ mod }2? \\displaystyle x\\equiv y\\text{ mod }2 \\displaystyle\\Rightarrow\\exists k\\in\\mathbb{Z}/x-y=2k \\displaystyle y\\equiv z\\text{ mod }2\\Rightarrow\\exists m\\in\\mathbb{Z}/y-z=2m . Sumando \\displaystyle x-y+y-z=2k+2m\\Rightarrow x-z=2(k+m) . Por tanto \\displaystyle x\\equiv z\\text{ mod }2 . Hemos visto que la congruencia modulo 2 es una relacion de equivalencia. Ejemplos de enteros relacionados: \\displaystyle 8\\equiv 6\\text{ mod 2} , \\displaystyle 3\\equiv 7\\text{ mod }2 , \\displaystyle 4\\equiv 4\\text{ mod }2 . Clases de equivalencia: \\displaystyle[1]=\\{\\ldots,-3,-1,1,3,5,7,\\ldots\\}=[3]=[5]=\\ldots \\displaystyle[2]=\\{\\ldots,-4,-2,0,2,4,\\ldots\\}=[4]=[0]=\\ldots Luego hay 2 clases y \\displaystyle\\mathbb{Z}/\\equiv\\text{mod }2=\\{[0],[1]\\}=\\mathbb{Z}_{2} . ∎ Definición 2.12 (Orden parcial). Decimos que una relacion es de orden parcial si es de orden pero no es de orden total. Ejemplo.  ​Relacion “menor o igual” en \\displaystyle\\mathbb{Z} (orden total).  ​Relacion “contenido o igual” en \\displaystyle\\mathcal{{P}}(A), siendo \\displaystyle A un conjunto (orden parcial si \\displaystyle|A|\\geq 2 , orden total si \\displaystyle|A|=1 o \\displaystyle A=\\varnothing ). Definición 2.13. Sean \\displaystyle n\\in\\mathbb{N},n\\geq 2 y \\displaystyle A_{1},A_{2},\\ldots,A_{n} conjuntos no vacios. Una relacion \\displaystyle n -aria entre \\displaystyle A_{1},A_{2},\\ldots,A_{n} es un subconjunto \\displaystyle R\\subseteq A_{1}\\times A_{2}\\times\\cdots\\times A_{n} . Previous page Next page"],[["index.html","Pt5.html","S20.html"],"20 Alfabeto y reglas de formacion de formulas ‣ Parte V Sintaxis de la logica de predicados ‣ Lógica‣ Parte V Sintaxis de la logica de predicados ‣ Lógica","Skip to content. Alfabeto y reglas de formacion de formulas 20 Alfabeto y reglas de formacion de formulas Definición 20.1 (Alfabeto de la logica de predicados). \\displaystyle A\\coloneqq\\{p_{1},p_{2},p_{3},\\ldots\\}\\cup\\{\\top,\\perp,\\neg,\\vee% ,\\wedge,\\rightarrow,\\leftrightarrow,(,)\\}\\cup\\{c_{1},c_{2},\\ldots\\}\\cup\\{P_{1}% ,P_{2},\\ldots\\}\\cup\\{x_{1},x_{2},\\ldots\\}\\cup\\{=\\}\\cup\\{,\\} . Nombre Símbolo Tipo Aridad Constante \\displaystyle c_{i} Función 0 Función de aridad \\displaystyle n\\geq 1 \\displaystyle f_{i} \\displaystyle n\\geq 1 Proposición atómica \\displaystyle p_{i} Predicado 0 Predicado de aridad \\displaystyle n\\geq 1 \\displaystyle P_{i} \\displaystyle n\\geq 1 Variable \\displaystyle x_{i} Variable - Nombre Símbolo Tipo Aridad Verdadero \\displaystyle\\top Conectiva 0 Falso \\displaystyle\\perp Negación \\displaystyle\\neg 1 Conjunción \\displaystyle\\wedge 2 Disyunción \\displaystyle\\vee Implicación \\displaystyle\\rightarrow Doble implicación \\displaystyle\\leftrightarrow Igualdad = Igualdad 2 Para todo \\displaystyle\\forall Cuantificador - Existe \\displaystyle\\exists Paréntesis izquierdo ( Auxiliar - Paréntesis derecho ) Coma , Vamos a definir de manera recursiva dos lenguajes sobre \\displaystyle A :  ​El conjunto \\displaystyle\\mathcal{{T}} de los terminos de la logica de predicados (que representaran elementos del dominio).  ​El conjunto \\displaystyle\\mathcal{{F}}_{1} de las formulas de la logica de predicados (que representaran enunciados). Definición 20.2 (Recursiva de termino). 1.​Terminos atomicos:  ​Si \\displaystyle c es un simbolo constante \\displaystyle\\Rightarrow c es un termino.  ​Si \\displaystyle x es un simbolo de variable \\displaystyle\\Rightarrow x es un termino. 2.​Si \\displaystyle f es un simbolo de funcion de aridad \\displaystyle n\\geq 1 y \\displaystyle t_{1},t_{2},\\ldots,t_{n} son terminos entonces \\displaystyle f(t_{1},t_{2},\\ldots,t_{n}) es un termino. 3.​Cualquier palabra que no se pueda obtener con la aplicacion de las reglas anteriores no es un termino. Definición 20.3 (Recursiva de formula de la logica de primer orden). 1.​Formulas atomicas:  ​Si \\displaystyle p es un simbolo de proposicion atomica \\displaystyle\\Rightarrow p es una formula.  ​ \\displaystyle\\top es una formula.  ​ \\displaystyle\\perp es una formula.  ​Si \\displaystyle P es un simbolo de predicado de aridad \\displaystyle n\\geq 1 y \\displaystyle t_{1},t_{2},\\ldots,t_{n} son terminos, entonces \\displaystyle P(t_{1},t_{2},\\ldots,t_{n} es una formula.  ​Si \\displaystyle t_{1},t_{2} son terminos, entonces \\displaystyle(t_{1}=t_{2}) es una formula. 2.​Si \\displaystyle\\varphi es una formula \\displaystyle\\Rightarrow\\neg\\varphi es una formula. 3.​Si \\displaystyle\\varphi,\\psi son formulas y \\displaystyle\\circ\\in\\{\\wedge,\\vee,\\rightarrow,\\leftrightarrow\\} entonces \\displaystyle(\\varphi\\circ\\psi) es una formula. 4.​Si \\displaystyle x es un simbolo de variable y \\displaystyle\\varphi es una formula, entonces:  ​ \\displaystyle\\forall x\\varphi es una formula.  ​ \\displaystyle\\exists x\\varphi es una formula. 5.​Cualquier palabra que no se pueda obtener con la aplicacion de las reglas anteriores no esu na formula. Observación. Se aplican los mismos criterios para abreviar formulas mediante eliminacion de parentesis que vimos en logica proposicional. Previous page Next page"],[["index.html","Pt5.html","S21.html"],"21 Arbol estructural, recursion, induccion ‣ Parte V Sintaxis de la logica de predicados ‣ Lógica‣ Parte V Sintaxis de la logica de predicados ‣ Lógica","Skip to content. Arbol estructural, recursion, induccion 21 Arbol estructural, recursion, induccion Observación. Ejemplo. Dibujar el arbol estructural de la formula: \\displaystyle\\forall x(P(a,f(x))\\wedge Q(f(a)))\\rightarrow(p\\vee P(g(b,y),a)% \\leftrightarrow\\exists y(Q(y)\\wedge(g(a,a)=x))) Ejemplo. Recursion. Definir por recursion una fubcion que, dada una formula cualquiera de la logica de predicados, devuelva el numero de conectivas que aparecen en la formula. \\displaystyle f\\colon\\mathcal{{F}}_{1} \\displaystyle\\longrightarrow\\mathbb{N}\\cup\\{0\\} \\displaystyle\\varphi \\displaystyle\\longmapsto f(\\varphi)=\\text{ num conectivas } 1.​Para formulas atomicas, \\displaystyle f(\\top)=1 , \\displaystyle f(\\perp)=1 . Si \\displaystyle p es un simbolo de proposicion atomica, \\displaystyle f(p)=0 . \\displaystyle f(P(t_{1},\\ldots,t_{n}))=0 , \\displaystyle f(t_{1}=b_{1})=0 Alternativamente si \\displaystyle\\varphi es atomica, \\displaystyle f(\\varphi)=\\begin{dcases}1\\text{ si }\\varphi=\\top,\\perp\\\\ 0\\text{ en el resto de casos}\\end{dcases} 2.​Si \\displaystyle\\varphi\\in\\mathcal{{F}}_{1} , entonces \\displaystyle f(\\neg\\varphi)=f(\\varphi)+1 . 3.​Si \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{1}\\Rightarrow f((\\varphi\\circ\\psi))% =f(\\varphi)+f(\\psi)+1 4.​ \\displaystyle f(\\forall x\\varphi)=f(\\varphi) 5.​ \\displaystyle f(\\exists x\\varphi)=f(\\varphi) Ejemplo. Definir por recursion una funcion que, dada una formula cualquiera de la logica de predicados, devuelva el numero de simbolos no auxiliares que aparecen en esa formula. \\displaystyle f\\colon\\mathcal{{F}}_{1} \\displaystyle\\longrightarrow\\mathbb{N} \\displaystyle\\varphi \\displaystyle\\longmapsto f(\\varphi)=\\text{num simbolos no aux } 1.​Si \\displaystyle\\varphi es atomica, \\displaystyle f(\\top)=1 \\displaystyle f(\\perp)=1 \\displaystyle p simb de prop atomica \\displaystyle\\Rightarrow f(p)=1 Sea \\displaystyle P es un pred. de aridad \\displaystyle n con \\displaystyle t_{1},\\ldots,t_{n} terminos. Necesito una funcion nueva que cuente el numero de simbolos no auxiliares de un termino, que vamos a definir tambien por recursion. \\displaystyle g\\colon\\mathcal{{T}} \\displaystyle\\longrightarrow\\mathbb{N} \\displaystyle t \\displaystyle\\longmapsto g(t)=\\text{ num simbolos no aux } a)​Si \\displaystyle t es termino atomico, \\displaystyle g(t)=1 . b)​Terminos compuestos: Sea \\displaystyle h un simbolo de funcion de aridad \\displaystyle n y \\displaystyle t_{1},\\ldots,t_{n} terminos: \\displaystyle g(h(t_{1},\\ldots,t_{n}))=g(t_{1})+g(t_{2})+\\cdots+g(t_{n})+1 Luego \\displaystyle f(P(t_{1},t_{2},\\ldots,t_{n}))=g(t_{1})+g(t_{2})+\\cdots+g(t_{n})+1 Si \\displaystyle t_{1},t_{2} son terminos, \\displaystyle f((t_{1}=t_{2}))=g(t_{1})+g(t_{2})+1 2.​Sea \\displaystyle\\varphi\\in\\mathcal{{F}}_{1}\\Rightarrow f(\\neg\\varphi)=f(\\varphi)+1 3.​Sea \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{1} \\displaystyle\\Rightarrow f((\\varphi\\circ\\psi))=f(\\varphi)+f(\\psi)+1 4.​Sea \\displaystyle\\varphi\\in\\mathcal{{F}}_{1} \\displaystyle f(\\forall x\\varphi)=f(\\varphi)+2 \\displaystyle f(\\exists x\\varphi)=f(\\varphi)+2 Previous page Next page"],[["index.html","Pt5.html","S22.html"],"22 Variables libres y variables ligadas ‣ Parte V Sintaxis de la logica de predicados ‣ Lógica‣ Parte V Sintaxis de la logica de predicados ‣ Lógica","Skip to content. Variables libres y variables ligadas 22 Variables libres y variables ligadas Definición 22.1. Sea \\displaystyle x un simbolo de variable que aparece en una formula \\displaystyle\\varphi .  ​Decimos que una aparicion de \\displaystyle x en \\displaystyle\\varphi es ligada si esta afectada por un cuantificador. En particular la aparicion de una variable justo despues de un cuantificador se considera ligada.  ​Decimos que una aparicion de \\displaystyle x en \\displaystyle\\varphi es libre si no es ligada.  ​Decimos que una variable \\displaystyle x es libre en la formula \\displaystyle\\varphi si tiene alguna aparicion libre.  ​Decimos que una variable \\displaystyle x es ligada en la formula \\displaystyle\\varphi si no es libre, es decir, si todas sus apariciones son ligadas. Definición 22.2. Sea \\displaystyle\\varphi una formula. Decimos que es:  ​Abierta si hay alguna variable que aparece libre en \\displaystyle\\varphi .  ​Cerrada si no es abierta, es decir, si todas las variables que aparezcan en \\displaystyle\\varphi son ligadas. Ejemplo.  ​ \\displaystyle\\forall x(P(x)\\rightarrow Q(x))\\wedge R(x) Las 3 primeras apariciones de \\displaystyle x son ligadas. La cuarta es libre. La formula es abierta.  ​ \\displaystyle\\forall x(P(x)\\rightarrow Q(x)\\wedge R(x)) Las 4 apariciones de \\displaystyle x son ligadas. La formula es cerrada.  ​ \\displaystyle\\exists x(P(x)\\wedge Q(y))\\vee\\forall y(P(y)\\rightarrow Q(x)) Las 2 primeras apariciones de \\displaystyle x son ligadas. La tercera es libre. La primera aparicion de \\displaystyle y es libre. Las 2 ultimas son ligadas. La formula es abierta.  ​ \\displaystyle\\exists x\\forall y((P(x)\\wedge Q(y))\\vee(P(y)\\rightarrow Q(x))) Todas las apariciones de \\displaystyle x e \\displaystyle y son ligadas. La formula es cerrada. Observación. Estamos interesados, sobre todo, en formulas cerradas. Siempre usaremos formulas cerradas para formalizar enunciados. Las formulas abiertas aparecen porque son necesarias como pasos intermedios para poder dar la definicion recursiva de formula. Ejemplo. Definir por recursion una funcion que, dada una formula cualquiera de la logica de predicados, devuelva el conjunto formado por todas las variables libres de la formula. Empezamos definiendo una funcion que devuelva las variables de un termino. \\displaystyle var\\colon\\mathcal{{T}} \\displaystyle\\longrightarrow\\mathcal{{P}}(V) \\displaystyle t \\displaystyle\\longmapsto\\text{conjunto de variables de t} donde \\displaystyle V=\\{x\\mid x\\text{ es un simbolo de variable}\\} . 1.​Terminos atomicos: Si \\displaystyle c es simbolo de constante: \\displaystyle var(c)=\\varnothing . Si \\displaystyle x es simbolo de variable: \\displaystyle var(x)=\\{x\\} . 2.​Terminos compuestos: Si \\displaystyle f es un simbolo de funcion de aridad \\displaystyle n\\geq 1 y \\displaystyle t_{1},t_{2},\\ldots,t_{n} son terminos, \\displaystyle var(f(t_{1},t_{2},\\ldots,t_{n}))=\\bigcup_{i=1}^{n}var(t_{i}) . Ahora definimos \\displaystyle lib\\colon\\mathcal{{F}}_{1} \\displaystyle\\longrightarrow\\mathcal{{P}}(V) \\displaystyle\\varphi \\displaystyle\\longmapsto\\text{cjto de variables libres de }\\varphi 3.​Formulas atomicas: \\displaystyle lib(\\top)=lib(\\perp)=lib(p)=\\varnothing donde \\displaystyle p es simbolo de proposicion atomica. Si \\displaystyle P es un simbolo de predicado de aridad \\displaystyle n\\geq 1 y \\displaystyle t_{1},t_{2},\\ldots,t_{n} son terminos: \\displaystyle lib(P(t_{1},t_{2},\\ldots,t_{n}))=\\bigcup_{i=1}^{n}var(t_{i}) \\displaystyle lib((t_{1}=t_{2}))=lib(t_{1})\\cup lib(t_{2}) 4.​Negacion: Si \\displaystyle\\varphi\\in\\mathcal{{F}}_{1}\\Rightarrow lib(\\neg\\varphi)=lib(\\varphi) 5.​Conectiva binaria: Dados \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{1}\\Rightarrow lib((\\varphi\\circ\\psi% ))=lib(\\varphi)\\cup lib(\\psi) 6.​Cuantificadores: Sea \\displaystyle\\varphi una formula y \\displaystyle x un simbolo de variable: \\displaystyle lib(\\forall x\\varphi)=lib(\\varphi)\\setminus\\{x\\} \\displaystyle lib(\\exists x\\varphi)=lib(\\varphi)\\setminus\\{x\\} Ejemplo. Definir por recursion una funcion que, dada una formula cualquiera de la logica de predicados, devuelva el conjunto formado por todas las variables ligadas de la formula. \\displaystyle lig\\colon\\mathcal{{F}}_{1} \\displaystyle\\longrightarrow\\mathcal{{P}}(V) \\displaystyle\\varphi \\displaystyle\\longmapsto\\text{conjunto de las variables ligadas de }\\varphi 1.​Formulas atomicas: Si \\displaystyle\\varphi es atomica \\displaystyle\\Rightarrow lib(\\varphi)=\\varnothing 2.​Negacion: \\displaystyle\\varphi\\in\\mathcal{{F}}_{1}\\Rightarrow lig(\\neg\\varphi)=lig(\\varphi) 3.​Conectiva binaria: \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{1}\\Rightarrow lig((\\varphi\\circ\\psi% ))=(lig(\\varphi)\\cup lig(\\psi))\\setminus(lib(\\varphi)\\cup lib(\\psi)) 4.​Cuantificadores: \\displaystyle\\varphi\\in\\mathcal{{F}}_{1},x variable. \\displaystyle lig(\\forall x\\varphi)=lig(\\exists x\\varphi)=lig(\\varphi)\\cup\\{x\\} Previous page Next page"],[["index.html","Pt6.html","S23.html"],"23 Evaluacion semantica de formulas (valores de verdad) ‣ Parte VI Semantica de la logica de predicados ‣ Lógica‣ Parte VI Semantica de la logica de predicados ‣ Lógica","Skip to content. Evaluacion semantica de formulas (valores de verdad) 23 Evaluacion semantica de formulas (valores de verdad) Objetivo de la seccion: Definir por recursion el valor de verdad de una formula, que podra ser  ​ \\displaystyle 0= “falso” o bien  ​ \\displaystyle 1= “verdadero”. Definición 23.1 (Signatura). Llamamos signatura al conjunto \\displaystyle\\Sigma formado por todos los simbolos de funcion y predicado (incluyendo los de constante y proposicion atomica). Definición 23.2 (Interpretacion). Sea \\displaystyle\\Sigma una signatura. Llamamos interpretacion definida sobre \\displaystyle\\Sigma a un par \\displaystyle(D,I) donde:  ​ \\displaystyle D es un conjunto no vacio, llamado el dominio de la interpretacion.  ​ \\displaystyle I es la funcion interpretacion que asocia a cada elemento de \\displaystyle\\Sigma un objeto matematico como se describe a continuacion: •​A cada simbolo de constante \\displaystyle c\\mapsto un elemento del dominio \\displaystyle c^{\\prime}\\in D . •​A cada simbolo de funcion \\displaystyle f de aridad \\displaystyle n\\geq 1\\mapsto una funcion \\displaystyle f^{\\prime}:D^{n}\\to D . •​A cada simbolo de predicado \\displaystyle P de aridad \\displaystyle n\\geq 1\\mapsto una relacion \\displaystyle n -aria \\displaystyle P^{\\prime}\\subseteq D^{n} . Observación. En la definicion anterior la relacion \\displaystyle P^{\\prime} describe el conjunto de \\displaystyle n -tuplas de \\displaystyle D^{\\prime\\prime} que “cumplen” el predicado \\displaystyle P en la interpretacion dada. Definición 23.3. Dado el conjunto de simbolos de variable, llamamos asignacion a una funcion \\displaystyle A que asocia:  ​A cada simbolo de variable \\displaystyle x\\mapsto un elemento del dominio \\displaystyle x^{A}\\in D . Observación. Normalmente, para evaluar una formula, solo asignaremos el conjunto finito de variables que aparezcan en la formula. … A continuacion, fijadas una interpretacion y una asignacion, vamos a asociar, de forma recursiva, a cada termino un elemento del dominio de la interpretacion. Definición 23.4 (Definicion recursiva de la evaluacion de un termino). Sean \\displaystyle\\Sigma una signatura, \\displaystyle(D,I) una interpretacion definida sobre \\displaystyle\\Sigma y \\displaystyle A una asignacion. Vamos a asociar, de forma recursiva, a cada termino \\displaystyle t un elemento del dominio \\displaystyle t^{I,A}\\in D .  ​Si \\displaystyle c es un simbolo de constante \\displaystyle\\Rightarrow(c)^{I,A}\\coloneqq c^{I}  ​Si \\displaystyle x es un simbolo de variable \\displaystyle\\Rightarrow(x)^{I,A}\\coloneqq x^{A}  ​Si \\displaystyle f es un simbolo de funcion de aridad \\displaystyle n\\geq 1 y \\displaystyle t_{1},t_{2},\\ldots,t_{n} son terminos \\displaystyle\\Rightarrow(f(t_{1},t_{2},\\ldots,t_{n}))^{I,A}\\coloneqq f^{I}(t^{% I,A}_{1},t^{I,A}_{2},\\ldots,t^{I,A}_{n}) . Sean \\displaystyle D un conjunto no vacio, \\displaystyle d\\in D , \\displaystyle A una asignacion y \\displaystyle x un simbolo de variable. Se define una nueva asignacion, que se denota \\displaystyle A[x/d] , como la asignacion que asocia a todas las variables el mismo elemento de \\displaystyle D que les asignaba \\displaystyle A , salvo al simbolo \\displaystyle x al que se asigna el valor \\displaystyle d . A continuacion, fijadas una interpretacion y una asignacion, vamos a asociar, de forma recursiva, a cada formula un valor de verdad. Definición 23.5 (Definicion recursiva de la evaluacion de una formula). Sean \\displaystyle\\Sigma una signatura, \\displaystyle(D,I) una interpretacion definida sobre \\displaystyle\\Sigma y \\displaystyle A una asignacion. Vamos a asociar, de forma recursiva, a cada formula \\displaystyle\\varphi un valor de verdad \\displaystyle\\varphi^{I,A}\\in\\{0,1\\}  ​ \\displaystyle(\\top)^{I,A}\\coloneqq 1  ​ \\displaystyle(\\perp)^{I,A}\\coloneqq 0  ​Si \\displaystyle p es un simbolo de proposicion atomica \\displaystyle\\Rightarrow(p)^{I,A}\\coloneqq p^{I}  ​Si \\displaystyle P es un simbolo de predicado de aridad \\displaystyle n\\geq 1 y \\displaystyle t_{1},t_{2},\\ldots,t_{n} son terminos \\displaystyle\\Rightarrow \\displaystyle(P(t_{1},t_{2},\\ldots,t_{n}))^{I,A}\\coloneqq\\begin{dcases}1\\text{% si }(t^{I,A}_{1},t^{I,A}_{2},\\ldots,t^{I,A}_{n})\\in P^{I}\\\\ 0\\text{ en caso contrario}\\end{dcases}  ​Si \\displaystyle t_{1},t_{2} son terminos \\displaystyle\\Rightarrow \\displaystyle((t_{1}=t_{2}))^{I,A}=\\begin{dcases}1\\text{ si }t^{I,A}_{1}=t^{I,% A}_{2}\\\\ 0\\text{ en caso contrario}\\end{dcases}  ​Si \\displaystyle\\varphi es una formula \\displaystyle(\\varphi)^{I,A} se define como en proposicional: …  ​Si \\displaystyle\\varphi,\\psi son formulas …  ​Si \\displaystyle\\varphi es una formula y \\displaystyle x es simbolo de variable \\displaystyle\\Rightarrow \\displaystyle(\\forall x\\varphi)^{I,A}\\coloneqq\\begin{dcases}1\\text{ si }% \\varphi^{I,A[x/d]}=1\\text{ para todos los elementos }d\\in D\\\\ 0\\text{ en caso contrario}\\end{dcases} \\displaystyle(\\exists x\\varphi)^{I,A}\\coloneqq\\begin{dcases}1\\text{ si }% \\varphi^{I,A[x/d]}=1\\text{ para algun elemento }d\\in D\\\\ 0\\text{ en caso contrario}\\end{dcases} Observación. La nocion intuitiva que hay tras la definicion de la evaluacion de los cuantificadores es:  ​ \\displaystyle\\forall x\\varphi es verdadera si y solo si \\displaystyle\\varphi es verdadera cuando \\displaystyle x toma todos los valores posibles de \\displaystyle D . (Para justificarlo hace falta un argumento general).  ​ \\displaystyle\\forall x\\varphi es falsa si y solo si se encuentra un valor del dominio para \\displaystyle x que hace que \\displaystyle\\varphi sea falsa. (Para justificarlo es suficiente un contraejemplo).  ​ \\displaystyle\\exists x\\varphi es verdadera si y solo si se encuentra un valor del dominio para \\displaystyle x que hace que \\displaystyle\\varphi sea verdadera. (Para justificarlo es suficiente un ejemplo).  ​ \\displaystyle\\exists x\\varphi es falsa si y solo si \\displaystyle\\varphi es falsa cuando \\displaystyle x toma todos los valores posibles de \\displaystyle D . (Para justificarlo hace falta un argumento general). Previous page Next page"],[["index.html","Pt6.html","S24.html"],"24 Modelos. Clasificacion de formulas. ‣ Parte VI Semantica de la logica de predicados ‣ Lógica‣ Parte VI Semantica de la logica de predicados ‣ Lógica","Skip to content. Modelos. Clasificacion de formulas. 24 Modelos. Clasificacion de formulas. Definición 24.1. Sea \\displaystyle\\varphi una formula. Decimos que \\displaystyle\\varphi es  ​satisfacible bajo una interpretacion \\displaystyle(D,I) si \\displaystyle\\varphi^{I,A}=1 para alguna asignacion \\displaystyle A .  ​satisfacible si es satisfacible bajo una interpretacion.  ​insatisfacible o contradiccion si no es satisfacible.  ​verdadera bajo una interpretacion \\displaystyle(D,I) si \\displaystyle\\varphi^{I,A}=1 para toda asignacion \\displaystyle A . En ese caso decimos que \\displaystyle(D,I) es modelo de \\displaystyle\\varphi y escribimos \\displaystyle(D,I)\\vDash\\varphi .  ​valida o tautologia si es verdadera bajo toda interpretacion. Escribimos \\displaystyle\\vDash\\varphi .  ​falsificable si no es tautologia. Observación. Si \\displaystyle\\varphi es cerrada, el valor de verdad \\displaystyle\\varphi^{I,A} no depende de la asignacion \\displaystyle A . Lo denotaremmos simplemente \\displaystyle\\varphi^{I} . Ademas las definiciones anteriores son mas sencillas y parecidas a las de logica proposicional para formulas cerradas. Decimos que \\displaystyle\\varphi es: 1.​verdadera bajo una interpretacion \\displaystyle(D,I) si \\displaystyle\\varphi^{I}=1 . En ese caso decimos que \\displaystyle(D,I) es modelo de \\displaystyle\\varphi y escribimos Previous page Next page"],[["index.html","Pt6.html","S25.html"],"25 Consecuencia logica ‣ Parte VI Semantica de la logica de predicados ‣ Lógica‣ Parte VI Semantica de la logica de predicados ‣ Lógica","Skip to content. Consecuencia logica 25 Consecuencia logica Definición 25.1. Sean \\displaystyle\\phi=\\{\\varphi_{1},\\varphi_{2},\\ldots,\\varphi_{n}\\} un conjunto de formulas y \\displaystyle\\psi otra formula. Decimos que \\displaystyle\\psi es consecuencia logica de \\displaystyle\\phi si para toda interpretacion \\displaystyle(D,I) y para toda asignacion \\displaystyle A se cumple: \\displaystyle(\\forall i\\exists\\{1,\\ldots,n\\}\\varphi^{I,A}_{i}=1)\\Rightarrow% \\psi^{I,A}=1 Tambien decimos que \\displaystyle\\phi implica logicamente a \\displaystyle\\psi . Notacion: \\displaystyle\\phi\\vDash\\psi Definición 25.2. Recordemos que un razonamiento es una formula de tipo \\displaystyle\\varphi_{1}\\wedge\\varphi_{2}\\wedge\\ldots\\wedge\\varphi_{n}% \\rightarrow\\psi. Decimos que el razonamiento anterior es correcto si es una tautologia o formula valida. Proposición 25.1. Sean \\displaystyle\\phi=\\{\\varphi_{1},\\ldots,\\varphi_{n}\\} Ejemplo. Estudia si el razonamiento: “Socrates es humano. Todo humano es mortal. Por tanto, Socrates es mortal.” formalizado mediante \\displaystyle\\begin{array}[]{l}\\varphi_{1}=H(s)\\\\ \\varphi_{2}=\\forall x(H(x)\\rightarrow M(x))\\\\ \\hline\\cr\\psi=M(s)\\end{array} es correcto. Como son formulas cerradas, basta con considerar interpretaciones, no hace falta considerar asignaciones. Queremos ver que \\displaystyle\\{\\varphi_{1},\\varphi_{2}\\}\\vDash\\psi o lo que es lo mismo, \\displaystyle\\varphi_{1}\\wedge\\varphi_{2}\\rightarrow\\psi es una tautologia. Sea \\displaystyle(D,I) una interpretacion tal que \\displaystyle\\varphi_{1}=1 y \\displaystyle\\varphi_{2}=1 . La condicion de que \\displaystyle\\varphi^{I}_{1}=1 es que \\displaystyle(H(s))^{I}=1 . \\displaystyle s^{I}\\in H^{I}\\subseteq D si la formula es verdadera. Entonces tengo que \\displaystyle s^{I}\\in H^{I} . La condicion de \\displaystyle\\varphi^{I}_{2}=1 es \\displaystyle\\forall x(H(x)\\rightarrow M(x))^{I}=1 . Esto es lo mismo que decir que \\displaystyle H^{I}\\subseteq M^{I} . Uniendo \\displaystyle s^{I}\\in H^{I} y que \\displaystyle H^{I}\\subseteq M^{I} tengo \\displaystyle s^{I}\\in M^{I}\\Rightarrow(M(s))^{I}=1 . Ejemplo. Estudia si el razonamiento: \\displaystyle\\begin{array}[]{l}\\varphi_{1}=M(s)\\\\ \\varphi_{2}=\\forall x(H(x)\\rightarrow M(x))\\\\ \\hline\\cr\\psi=H(s)\\end{array} es correcto. Es incorrecto. Tengo que demostrarlo con un contraejemplo. Por ejemplo, \\displaystyle D=\\mathbb{N} . \\displaystyle H(x)=x es multiplo de 4 \\displaystyle M(x)=x es par Mas formal: \\displaystyle H^{I}=\\{x\\mid x\\text{ es multiplo de 4}\\} y \\displaystyle M^{I}=\\{x\\mid x\\text{ es multiplo de }2\\} . \\displaystyle\\varphi^{I}_{2}=1 porque si se cumple que un elemento es multiplo de 4 entonces tambien es multiplo de \\displaystyle 2 . \\displaystyle S^{I}=6 . Con esta interpretacion \\displaystyle M(s)^{I}=1 porque \\displaystyle 2|6 pero \\displaystyle H(s)^{I}=0 porque \\displaystyle 4\\nmid 6 . Otra alternativa es elegir conjuntos finitos sencillos. \\displaystyle\\begin{rcases}D=\\{a,b\\}\\\\ H^{I}=\\{a\\}\\\\ M^{I}=\\{a,b\\}\\\\ s^{I}=b\\end{rcases} Esta interpretacion tambien es un contraejemplo al razonamiento. \\displaystyle\\varphi^{I}_{1}=1 porque \\displaystyle s^{I}\\in M^{I} \\displaystyle\\varphi^{I}_{2}=1 porque \\displaystyle H^{I}\\subseteq M^{I} \\displaystyle\\psi^{I}=0 porque \\displaystyle S^{I}\\not\\in H^{I} Definición 25.3. Sean \\displaystyle\\varphi y \\displaystyle\\psi dos formulas. Decimos que son equivalentes si se cumple simultaneamente Proposición 25.2. Sean \\displaystyle\\varphi y \\displaystyle\\psi dos formulas. Las siguientes dos afirmaciones son equivalentes:  ​ \\displaystyle\\varphi\\equiv\\psi Ejemplo. Sean \\displaystyle\\varphi y \\displaystyle\\psi formulas cualesquiera y \\displaystyle\\alpha una formula donde no aparece libre la variable \\displaystyle x . 1.​ \\displaystyle\\neg\\forall x\\varphi\\equiv\\exists x\\neg\\varphi Vamos a ver que \\displaystyle\\varphi_{1}\\vDash\\varphi_{2} . Sean \\displaystyle(D,I) interpretacion y \\displaystyle A asignacion tales que \\displaystyle(\\neg\\forall x\\varphi)^{I,A}=1\\Rightarrow(\\forall x\\varphi)^{I,A}% =0\\Rightarrow\\varphi^{I,A[x/d]}=0 para algun \\displaystyle d\\in D\\Rightarrow(\\neg\\varphi)^{I,A[x/d]}=1 para algun \\displaystyle d\\in D\\Rightarrow(\\exists x\\neg\\varphi)^{I,A}=1 . ¿Como demuestro que \\displaystyle\\varphi_{2}\\vDash\\varphi_{1} ? Son los reciprocos del argumento anterior. En realidad, se puede escribir la demostracion como una cadena de dobles implicaciones. 2.​ \\displaystyle\\neg\\exists x\\varphi\\equiv\\forall x\\neg\\varphi Vamos a utilizar \\displaystyle(1) . \\displaystyle\\neg\\exists x\\varphi\\equiv\\neg\\exists x\\neg\\neg\\varphi\\overset{(1% )}{\\equiv}\\neg\\neg\\forall x\\neg\\varphi\\equiv\\forall x\\neg\\varphi . 3.​ \\displaystyle\\forall x(\\varphi\\wedge\\psi)\\equiv\\forall x\\varphi\\wedge\\forall x\\psi Sean \\displaystyle(D,I) una interpretacion y \\displaystyle A una asignacion. \\displaystyle\\forall x(\\varphi\\wedge\\psi)^{I,A}=1\\Rightarrow para todos los valores \\displaystyle d\\in D(\\varphi\\wedge\\psi)^{I,A[x/d]}=1\\Leftrightarrow\\varphi^{I,% A[x/d]}=1\\text{ y }\\psi^{I,A[x/d]}\\Leftrightarrow(\\forall x\\varphi)^{I,A[x/d]}% \\text{ y }(\\forall x\\psi)^{I,A[x/d]}=1\\Leftrightarrow((\\forall x\\varphi)\\wedge% (\\forall x\\psi))^{I,A}=1 4.​ \\displaystyle\\exists x(\\varphi\\vee\\psi)\\equiv\\exists x\\varphi\\vee\\exists x\\psi \\displaystyle\\exists x(\\varphi\\vee\\psi)\\equiv\\neg\\neg\\exists x(\\varphi\\vee\\psi% )\\equiv\\neg\\forall x\\neg(\\varphi\\vee\\psi)\\equiv\\neg\\forall x(\\neg\\varphi\\wedge% \\neg\\psi)\\equiv\\neg(\\forall x\\neg\\varphi\\wedge\\forall x\\neg\\psi)\\equiv\\neg% \\forall x\\neg\\varphi\\vee\\neg\\forall x\\neg\\psi\\equiv\\exists x\\neg\\neg\\varphi% \\vee\\exists x\\neg\\neg\\psi\\equiv\\exists x\\varphi\\vee\\exists x\\psi 5.​ \\displaystyle\\forall x\\varphi\\wedge\\alpha\\equiv\\forall x(\\varphi\\wedge\\alpha) Sean \\displaystyle(D,I) una interpretacion y \\displaystyle A una asignacion. \\displaystyle\\forall x(\\varphi\\wedge\\alpha)=1\\Leftrightarrow(\\varphi\\wedge% \\alpha)^{I,A[x/d]}=1 para todo \\displaystyle d\\in D\\Leftrightarrow\\varphi^{I,A[x/d]}=1 y \\displaystyle\\psi^{I,A[x/d]}=1 para todo \\displaystyle d\\in D\\Leftrightarrow\\varphi^{I,A[x/d]}=1 para todo \\displaystyle d\\in D y \\displaystyle\\alpha^{I,A}=1 (porque \\displaystyle x no aparece libre en \\displaystyle\\alpha ) \\displaystyle\\Leftrightarrow\\forall x\\varphi^{I,A}=1 , \\displaystyle\\alpha^{I,A}=1\\Leftrightarrow(\\forall x\\varphi\\wedge\\alpha)^{I,A}=1 Ejemplo. Sean \\displaystyle\\varphi y \\displaystyle\\psi cualesquiera y \\displaystyle\\alpha una formula donde no aparece libre la variable \\displaystyle x . En general las siguientes formulas no son equivalentes: b)​ \\displaystyle\\forall(\\varphi\\vee\\psi)\\not\\equiv\\forall x\\varphi\\vee\\forall x\\psi Elijo \\displaystyle P,Q dos predicados de aridad 1. \\displaystyle D=\\{a,b\\} , \\displaystyle P^{I}=\\{a\\} , \\displaystyle Q^{I}=\\{b\\} . \\displaystyle\\begin{dcases}\\forall x(P(x)\\vee Q(x))=\\varphi_{1}\\\\ \\forall xP(x)\\vee\\forall xQ(x)=\\varphi_{2}\\end{dcases} \\displaystyle\\varphi^{I}_{1}=1 porque si \\displaystyle x=a \\displaystyle\\underbrace{\\underbrace{P(a)}_{1}\\vee Q(a)}_{1} y si \\displaystyle x=b , \\displaystyle\\underbrace{P(b)\\vee\\underbrace{Q(b)}_{1}}_{1} . \\displaystyle\\varphi^{I}_{2}=0 porque \\displaystyle\\begin{dcases}\\forall xP(x)^{I}=0\\text{ porque }x=b\\text{ es un % contraejemplo}\\\\ \\forall xP(x)^{I}=0\\text{ porque }x=a\\text{ es un contraejemplo}\\end{dcases} Hemos visto que \\displaystyle\\varphi_{1}\\not\\equiv\\varphi_{2} . ¿Alguna implica logicamente a la otra? \\displaystyle\\psi\\vDash\\varphi Si \\displaystyle\\varphi_{2}^{I,A}=1\\Rightarrow o bien \\displaystyle(\\forall xP(x))^{I,A}=1\\Rightarrow\\varphi^{I,A}=1 o bien \\displaystyle(\\forall x(Q(x)))^{I,A}=1\\Rightarrow\\varphi^{I,A}=1 . c)​ \\displaystyle\\exists x(P(x)\\wedge Q(x))=\\varphi_{1} \\displaystyle\\exists xP(x)\\wedge(\\exists xQ(x))=\\varphi_{2} \\displaystyle D=\\{a,b\\} , \\displaystyle P^{I}=\\{a\\} , \\displaystyle Q^{I}=\\{b\\} \\displaystyle\\varphi^{I}_{2}=1 porque \\displaystyle\\exists xP(x)^{I}=1 como \\displaystyle x=a y \\displaystyle\\exists xQ(x)^{I}=1 con \\displaystyle x=b . \\displaystyle\\varphi^{I}_{1}=0 porque si \\displaystyle x=a \\displaystyle\\underbrace{\\underbrace{P(a)}_{1}\\wedge Q(a)}_{0} y si \\displaystyle x=b \\displaystyle(\\underbrace{P(b)\\wedge\\underbrace{Q(b)}_{1}}_{0}) . Se que \\displaystyle\\varphi_{1} porque \\displaystyle\\varphi_{2}\\not\\vDash\\varphi_{1} . Es cierto que \\displaystyle\\varphi_{1}\\vDash\\varphi_{2} ? Si \\displaystyle I es una interpretacion tal que \\displaystyle\\varphi_{1}=1\\Rightarrow Existe \\displaystyle d\\in D tal que \\displaystyle d\\in P^{I} y \\displaystyle d\\in Q^{I}\\Rightarrow\\exists xP(x)^{I}=1 y \\displaystyle\\exists xQ(x)^{I}=1\\Rightarrow\\varphi^{I}_{2}=1 . d)​ \\displaystyle\\forall x\\varphi\\to\\alpha\\not\\equiv\\forall x(\\varphi\\to\\alpha) \\displaystyle\\forall x(\\varphi\\to\\alpha)\\equiv\\forall x(\\neg\\varphi\\vee\\alpha)% \\equiv\\forall x\\neg\\varphi\\vee\\alpha\\equiv\\neg\\exists\\varphi\\vee\\alpha\\equiv% \\exists x\\varphi\\to\\alpha\\not\\equiv\\forall x\\varphi\\to\\alpha . Justificacion de que no son equivalentes: Con \\displaystyle\\alpha=p simbolo de proposicion atomica y \\displaystyle\\varphi=P(x) predicado de aridad 1. \\displaystyle\\exists P(x)\\to p\\not\\equiv\\forall xP(x)\\to p \\displaystyle D=\\{a,b\\} , \\displaystyle P^{I}=\\{a\\} y \\displaystyle p^{I}=0 \\displaystyle\\underbrace{\\underbrace{\\exists xP(x)}_{1}\\to\\underbrace{p}_{0}}_% {0}\\quad\\underbrace{\\underbrace{\\forall xP(x)}_{0}\\to\\underbrace{p}_{0}}_{1} Previous page Next page"],[["index.html","Pt1.html","S3.html"],"3 Funciones ‣ Parte I Conjuntos, relaciones y funciones ‣ Lógica‣ Parte I Conjuntos, relaciones y funciones ‣ Lógica","Skip to content. Funciones 3 Funciones Definición 3.1 (Función). Sean \\displaystyle A y \\displaystyle B conjuntos no vacios. Decimos que \\displaystyle f es una funcion de \\displaystyle A en \\displaystyle B si es una relacion binaria entre \\displaystyle A y \\displaystyle B tal que cada elemento de \\displaystyle A esta relacionado con un unico elemento de \\displaystyle B . Simbolicamente:  ​ \\displaystyle f\\subseteq A\\times B  ​ \\displaystyle\\forall a\\in A\\;\\exists!b\\in B\\,/\\,afb Dado cualquier \\displaystyle a\\in A , al unico \\displaystyle b\\in B que esta relacionado con \\displaystyle a lo llamamos imagen de \\displaystyle a por \\displaystyle f ( \\displaystyle b=f(a) ). Observación. Si \\displaystyle f es una funcion, entonces \\displaystyle dom(f)=A . Definición 3.2 (Codominio). Si \\displaystyle f es una funcion de \\displaystyle A en \\displaystyle B , decimos que \\displaystyle B es el codominio de \\displaystyle f . Si \\displaystyle f es una funcion de \\displaystyle A en \\displaystyle B es tipico escribir \\displaystyle f\\colon A \\displaystyle\\longrightarrow B \\displaystyle x \\displaystyle\\mapsto f(x)=y Ejemplo. \\displaystyle f\\colon\\mathbb{R} \\displaystyle\\longrightarrow\\mathbb{R} \\displaystyle x \\displaystyle\\mapsto f(x)=x^{2}-5 \\displaystyle(1,-4)\\in f , \\displaystyle 1f-4 , \\displaystyle f(1)=-4 Definición 3.3 (Funcion inyectiva). Sea \\displaystyle f\\colon A\\to B una funcion. Decimos que \\displaystyle f es inyectiva si no hay dos elementos que tengan la misma imagen. Simbolicamente: \\displaystyle\\forall a,a^{\\prime}\\in A\\;(a\\neq a^{\\prime}\\Rightarrow f(a)\\neq f% (a^{\\prime})) Tambien se puede escribir: \\displaystyle\\forall a,a^{\\prime}\\in A\\;(f(a)=f(a^{\\prime})\\Rightarrow a=a^{% \\prime}) Definición 3.4 (Funcion suprayectiva). Sea \\displaystyle f\\colon A\\to B una funcion. Decimos que \\displaystyle f es suprayectiva o sobreyectiva si todo elemento de \\displaystyle B es imagen de algun elemento de \\displaystyle A . Simbolicamente: \\displaystyle\\forall b\\in B\\;\\exists a\\in A/f(a)=b Es decir, \\displaystyle Im(f)=B . Definición 3.5 (Funcion biyectiva). Sea \\displaystyle f\\colon A\\to B una funcion. Decimos que \\displaystyle f es biyectiva si es inyectiva y suprayectiva a la vez. Por tanto, \\displaystyle\\forall b\\in B\\;\\exists!a\\in A/f(a)=b Observación. Para que exista una funcion inyectiva entre dos conjuntos finitos es necesario que tengan el mismo cardinal. Observación. “Calcular el dominio de una funcion”. Estamos resolviendo “busca el conjunto mas grande de numeros reales que pueda ser dominio de una funcion con esta expresion”. Puedo definir una funcion \\displaystyle f\\colon\\mathbb{R}\\setminus\\{1,-1\\} \\displaystyle\\longrightarrow\\mathbb{R} \\displaystyle x \\displaystyle\\longmapsto f(x)=\\frac{x^{2}}{x^{2}-1} o tambien \\displaystyle g\\colon(2,+\\infty) \\displaystyle\\longrightarrow\\mathbb{R} \\displaystyle x \\displaystyle\\longmapsto g(x)=\\frac{x^{2}}{x^{2}-1} Definición 3.6. Sean \\displaystyle f\\colon A\\to B y \\displaystyle g\\colon B\\to C dos funciones. Se define una nueva funcion, llamada la composicion de \\displaystyle f con \\displaystyle g como una nueva funcion: \\displaystyle g\\circ f\\colon A \\displaystyle\\longrightarrow C \\displaystyle x \\displaystyle\\longmapsto y=(g\\circ f)(x)\\coloneqq g(f(x)) Ejemplo. \\displaystyle A=\\{1,2,3\\} \\displaystyle B=\\{a,b,c,d\\} \\displaystyle C=\\{2,4,6,8\\} \\displaystyle\\begin{array}[]{lr}\\begin{aligned} f\\colon A&\\longrightarrow B\\\\ 1&\\longmapsto f(1)=a\\\\ 2&\\longmapsto f(2)=a\\\\ 3&\\longmapsto f(3)=d\\end{aligned}&\\qquad\\begin{aligned} g\\colon B&% \\longrightarrow C\\\\ a&\\longmapsto f(a)=2\\\\ b&\\longmapsto f(b)=2\\\\ c&\\longmapsto f(c)=6\\\\ d&\\longmapsto f(d)=8\\end{aligned}\\end{array} Entonces \\displaystyle g\\circ f\\colon A \\displaystyle\\longrightarrow C \\displaystyle 1 \\displaystyle\\longmapsto 2 \\displaystyle 2 \\displaystyle\\longmapsto 2 \\displaystyle 3 \\displaystyle\\longmapsto 8 La composicion \\displaystyle f\\circ g no tiene sentido (contraejemplo: \\displaystyle f no esta definido en 8). Ejemplo. \\displaystyle f\\colon\\mathbb{R} \\displaystyle\\longrightarrow\\mathbb{R} \\displaystyle x \\displaystyle\\longmapsto f(x)=2x+1 \\displaystyle g\\colon\\mathbb{R} \\displaystyle\\longrightarrow\\mathbb{R} \\displaystyle x \\displaystyle\\longmapsto g(x)=x^{2} Por ejemplo: \\displaystyle(g\\circ f)(4)=g(f(4))=g(9)=81 La expresion general de \\displaystyle g\\circ f es: \\displaystyle(g\\circ f)(x)=g(f(x))=g(2x+1)=(2x+1)^{2}=4x^{2}+4x+1 . En este caso si tiene sentido \\displaystyle f\\circ g : \\displaystyle(f\\circ g)(x)=f(g(x))=f(x^{2})=2x^{2}+1 Vamos a justificar que \\displaystyle f\\circ g\\neq g\\circ f . Hemos visto que \\displaystyle(g\\circ f)(4)=81 . \\displaystyle(f\\circ g)(4)=2\\cdot 4^{2}+1=33 . Luego son funciones distintas. Observación. Para definir la composicion \\displaystyle g\\circ f para dos funciones cualesquiera es suficiente que \\displaystyle im(f)\\subseteq dom(g) . Definición 3.7 (Funcion identidad). Sea \\displaystyle A un conjunto. Se define la funcion identidad en \\displaystyle A como \\displaystyle id_{A}\\colon A \\displaystyle\\longrightarrow A \\displaystyle x \\displaystyle\\longmapsto id_{A}(x)=x Definición 3.8. Sea \\displaystyle f\\colon A\\to B una funcion. Se dice que \\displaystyle f tiene inversa si exista otra funcion \\displaystyle g\\colon B\\to A que cumple:  ​ \\displaystyle\\forall a\\in A\\;((g\\circ f)(a)=a)  ​ \\displaystyle\\forall b\\in B\\;((f\\circ g)(b)=b) En ese caso se dice que \\displaystyle g es la funcion inversa de \\displaystyle f ( \\displaystyle g=f^{-1} ). Observación. Las dos condiciones anteriores se pueden reformular como  ​ \\displaystyle g\\circ f=id_{A}  ​ \\displaystyle f\\circ g=id_{B} Observación. No todas las funciones tienen inversa. Ejemplo: Sea \\displaystyle f\\colon\\mathbb{R}\\to\\mathbb{R},\\;x\\mapsto x^{2} . No existe ningun \\displaystyle a\\in\\mathbb{R} tal que \\displaystyle a^{2}=-3 . Eso me impide que haya inversa. Ahora, definimos \\displaystyle g\\colon\\mathbb{R}\\to[0,+\\infty],\\;x\\mapsto x^{2} . En este caso, tampoco tiene inversa porque no puedo definir una funcion que vaya bien para 4 ( \\displaystyle f(2)=4 y \\displaystyle f(-2)=4 ) o cualquier otro numero. Teorema 3.1. Sea \\displaystyle f\\colon A\\to B una funcion. Se cumple \\displaystyle f\\text{ tiene inversa}\\Leftrightarrow f\\text{ es biyectiva} Demostración. \\displaystyle\\Rightarrow) Vamos a demostrar que si \\displaystyle f tiene inversa, entonces \\displaystyle f es biyectiva. Al ser inversa, \\displaystyle\\exists una funcion \\displaystyle g\\colon B\\to A tal que \\displaystyle f\\circ g=id_{A} y \\displaystyle g\\circ f=id_{B} . 1.​Vamos a ver que \\displaystyle f es inyectiva. Sean \\displaystyle x,y\\in A tales que \\displaystyle f(x)=f(y) . Aplico la funcion \\displaystyle g a ambos lados. \\displaystyle\\underbrace{g(f(x))}_{=x(id_{A})}=\\underbrace{g(f(y))}_{=y(id_{B})} Por tanto, \\displaystyle x=y . 2.​Vamos a ver que \\displaystyle f es suprayectiva. Sea \\displaystyle b\\in B cualquiera. Tenemos que encontrar una preimagen de \\displaystyle b , es decir, un \\displaystyle x\\in A tal que \\displaystyle f(x)=b . Tomo \\displaystyle x=g(b) ya que \\displaystyle f(x)=f(g(b))=b . Por tanto, \\displaystyle f es biyectiva. \\displaystyle\\Leftarrow) Vamos a demostrar que si \\displaystyle f es biyectiva, entonces tiene inversa. Vamos a formalizar la idea de “darle la vuelta a las flechas”. Como se escribe \\displaystyle f si la veo como una relacion? \\displaystyle f=\\{(a,b)\\mid a\\in A,b=f(a)\\} . Voy a construir la relacion \\displaystyle g\\coloneqq\\{(b,a)\\mid a\\in A,b=f(a)\\} . Basta con comprobar que \\displaystyle g es una funcion. Como \\displaystyle f es suprayectiva, tenemos que \\displaystyle dom(g)=B , es decir, todos los elementos de \\displaystyle B tienen imagen. Como \\displaystyle f es inyectiva, no hay ningun elemento de \\displaystyle B que tenga dos imagenes distintas por \\displaystyle g . Por construccion, \\displaystyle g que hemos visto que es una funcion, cumple la definicion de ser inversa de \\displaystyle f . Por tanto, \\displaystyle f tiene inversa. ∎ Observación. \\displaystyle f\\colon\\mathbb{R} \\displaystyle\\longrightarrow\\mathbb{R} \\displaystyle x \\displaystyle\\longmapsto f(x)=e^{x} Como funcion de \\displaystyle\\mathbb{R} en \\displaystyle\\mathbb{R} , \\displaystyle e^{x} no tiene inversa, ya que no es suprayectiva. En cambio, si consideramos \\displaystyle f\\colon\\mathbb{R} \\displaystyle\\longrightarrow(0,+\\infty) \\displaystyle x \\displaystyle\\longmapsto f(x)=e^{x} Esta funcion si es biyectiva porque el codominio coincide con la imagen. En este caso su inversa es \\displaystyle g\\colon(0,+\\infty) \\displaystyle\\longrightarrow\\mathbb{R} \\displaystyle x \\displaystyle\\longmapsto g(x)=\\ln(x) Asi definidas se cumple \\displaystyle f^{-1}=g . Observación. Si \\displaystyle f^{-1}=g , tambien es cierto que \\displaystyle g^{-1}=f . Observación. La notacion \\displaystyle f^{-1} es ambigua. Puede referirse a la inversa de \\displaystyle f , en el caso de que esta exista, o la imagen inversa de un conjunto por la relacion \\displaystyle f . Ejemplo: Dada \\displaystyle f\\colon\\mathbb{R}\\to\\mathbb{R},\\;x\\mapsto x^{3} (biyectiva y tiene inversa). \\displaystyle f^{-1}(64)=4 , \\displaystyle f^{-1}(2)=\\sqrt[3]{2} , \\displaystyle f^{-1}([8,64])=[2,4] . Otro ejemplo es \\displaystyle f\\colon\\mathbb{R}\\to\\mathbb{R},\\;x\\mapsto x^{2} . \\displaystyle f^{-1}(9) no tiene sentido porque \\displaystyle f no es biyectiva y por tanto no tiene inversa. En cambio, \\displaystyle f^{-1}(\\{9\\})=\\{3,-3\\} o \\displaystyle f^{-1}([25,49])=[5,7]\\cup(-7,5] Previous page Next page"],[["index.html","Pt2.html","S4.html"],"4 Definicion de formula ‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica","Skip to content. Definicion de formula 4 Definicion de formula Definición 4.1 (Lenguaje, informal).  ​Llamamos alfabeto a un conjunto \\displaystyle A , cuyos elementos se denominan simbolos.  ​Una palabra sobre \\displaystyle A es una sucesion finita de simbolos de \\displaystyle A , escritos uno a continuacion de otro.  ​El conjunto de todas las palabras sobre \\displaystyle A se denota como \\displaystyle A^{*} .  ​Un lenguaje sobre \\displaystyle A es un subconjunto \\displaystyle L\\subseteq A^{*} . Ejemplo. \\displaystyle A\\coloneqq\\{\\text{letras, mayusculas o minusculas, del alfabeto}\\} \\displaystyle L\\coloneqq\\{\\text{palabras que aparecen en el diccionario de la % RAE }.\\} \\displaystyle A\\coloneqq\\{0,1\\} \\displaystyle L_{1}\\coloneqq A^{*} (todas las cadenas finitas de bits). \\displaystyle L_{2}\\coloneqq\\{x\\in A^{*}\\mid x\\text{ consta exactamente de 8 % simbolos }\\} Ejemplo. \\displaystyle A\\coloneqq\\{0,1\\} . Reglas que definen \\displaystyle L : 1.​ \\displaystyle 00\\in L . 2.​ \\displaystyle w\\in L,v\\in L\\Rightarrow wv\\in L (cerrado por concatenacion). 3.​ \\displaystyle w\\in L\\Rightarrow w1\\in L 4.​Cualquier palabra que no se pueda obtener con la aplicacion de las reglas anteriores, no esta en \\displaystyle L . Se puede demostrar que \\displaystyle L consiste en todas las cadenas de bits que comienzan por \\displaystyle 00 y que no tienen una cantidad impar de ceros consecutivos. Ejemplos de palabras que estan en el lenguaje \\displaystyle L : \\displaystyle 00\\in L(1),0000\\in L(2),001\\in L(3),00100\\in L(2) . Definición 4.2 (Alfabeto de la logica proposicional). \\displaystyle A\\coloneqq\\{p_{1},p_{2},p_{3},\\ldots\\}\\cup\\{\\top,\\perp,\\neg,% \\wedge,\\vee,\\rightarrow,\\leftrightarrow,(,)\\} Nombre Simbolo Tipo Aridad Proposición atómica \\displaystyle p_{i} Proposición atómica - Verdadero \\displaystyle\\top Conectiva 0 Falso \\displaystyle\\perp Negación \\displaystyle\\neg 1 Conjunción \\displaystyle\\vee 2 Disyunción \\displaystyle\\wedge Implicación \\displaystyle\\rightarrow Doble implicación \\displaystyle\\leftrightarrow Paréntesis izquierdo ( Auxiliar - Paréntesis derecho ) Definición 4.3. Vamos a definir el lenguaje \\displaystyle\\mathcal{{F}}_{0}\\subseteq A^{*} de las formulas de la logica proposicional mediante las siguientes reglas de formacion: 1.​Formulas atomicas:  ​Si \\displaystyle p es un simbolo de proposicion atomica \\displaystyle\\Rightarrow \\displaystyle p\\in\\mathcal{{F}}_{0}  ​ \\displaystyle\\top\\in\\mathcal{{F}}_{0}  ​ \\displaystyle\\perp\\in\\mathcal{{F}}_{0} 2.​Si \\displaystyle\\varphi\\in\\mathcal{{F}}_{0}\\Rightarrow\\neg\\varphi\\in\\mathcal{{F}}% _{0} . 3.​Si \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{0} entonces:  ​ \\displaystyle(\\varphi\\wedge\\psi)\\in\\mathcal{{F}}_{0}  ​ \\displaystyle(\\varphi\\vee\\psi)\\in\\mathcal{{F}}_{0}  ​ \\displaystyle(\\varphi\\rightarrow\\psi)\\in\\mathcal{{F}}_{0}  ​ \\displaystyle(\\varphi\\leftrightarrow\\psi)\\in\\mathcal{{F}}_{0} 4.​Cualquier palabra que no se pueda obtener con la aplicacion de las reglas anteriores, no esta en \\displaystyle\\mathcal{{F}}_{0} . Observación. Con estas reglas de formacion estrictas que hemos dado en la definicion, \\displaystyle p\\wedge q no es una formula. Observación. Por economia de escritura, muchas veces escribiremos la tercera regla de la definicion anterior como:  ​Si \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{0} entonces \\displaystyle(\\varphi\\circ\\psi)\\in\\mathcal{{F}}_{0} , donde \\displaystyle\\circ\\in\\{\\wedge,\\vee,\\rightarrow,\\leftrightarrow\\} Previous page Next page"],[["index.html","Pt2.html","S5.html"],"5 Fórmulas en forma abreviada ‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica","Skip to content. Fórmulas en forma abreviada 5 Fórmulas en forma abreviada Definición 5.1 (Reglas de eliminacion de parentesis). Vamos a dar 3 reglas que permiten eliminar parentesis de una formula, dando como resultado una formula en forma abreviada: 1.​Se puede eliminar el parentesis externo. 2.​Las conectivas binarias \\displaystyle\\wedge y \\displaystyle\\vee tienen precedencia sobre las conectivas binarias \\displaystyle\\rightarrow y \\displaystyle\\leftrightarrow . Si se “enfrentan” dos de estas conectivas, se puede eliminar el parentesis correspondiente a la que tiene precedencia. 3.​Dos conectivas binarias iguales asocian por la derecha. Si se “enfrentan” dos conectivas binarias iguales y el parentesis esta a la derecha, puede eliminarse. El resultado de aplicar cualquier cantidad de veces estas reglas a una formula se considera una forma abreviada de esa formula que tambien la representa. Observación. La formula \\displaystyle p\\wedge q\\vee r no es abreviada, ya que no se puede aplicar ninguna regla de las anteriores. Observación. Hay infinitas formulas, incluso si considerasemos solo un conjunto finito de proposiciones atomicas. Por ejemplo: \\displaystyle p,\\neg p,\\neg\\neg p,\\neg\\neg\\neg p,\\ldots Previous page Next page"],[["index.html","Pt2.html","S6.html"],"6 Definicion por recursion de funciones sobre formulas ‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica","Skip to content. Definicion por recursion de funciones sobre formulas 6 Definicion por recursion de funciones sobre formulas Ejemplo. La funcion factorial \\displaystyle\\text{fact}\\colon\\mathbb{N} \\displaystyle\\longrightarrow\\mathbb{N} \\displaystyle n \\displaystyle\\longmapsto n! se puede definir recursivamente mediante las siguientes dos reglas: 1.​ \\displaystyle\\text{fact}(1)\\coloneqq 1 2.​ \\displaystyle\\forall n\\geq 2\\quad\\text{fact}(n)\\coloneqq n\\cdot\\text{fact}(n-1) Observación. Para definir una funcion sobre \\displaystyle\\mathbb{N} por recursion basta con definir \\displaystyle f(1) y, a partir de \\displaystyle f(n) , calcular \\displaystyle f(n+1) . Ejemplo. Vamos a definir por recursion una funcion que devuelva el numero de simbolos de una formula. \\displaystyle f\\colon\\mathcal{{F}}_{0} \\displaystyle\\longrightarrow\\mathbb{N} formula \\displaystyle\\longmapsto\\text{numero} Definimos \\displaystyle f : 1.​Si \\displaystyle\\varphi es una formula atomica, \\displaystyle f(\\varphi)\\coloneqq 1 . 2.​Si \\displaystyle\\varphi es una formula, \\displaystyle f(\\neg\\varphi)=1+f(\\varphi) 3.​Si \\displaystyle\\varphi,\\psi son formulas, \\displaystyle f(\\varphi\\wedge\\psi)=3+f(\\varphi)+f(\\psi) , \\displaystyle f(\\varphi\\vee\\psi)=3+f(\\varphi)+f(\\psi) … \\displaystyle f(\\varphi\\circ\\psi)=f(\\varphi)+f(\\psi)+3 donde \\displaystyle\\circ\\in\\{\\wedge,\\vee,\\rightarrow,\\leftrightarrow\\} . \\displaystyle f(\\neg((\\neg p\\rightarrow q))\\wedge r)=f((()\\neg p\\rightarrow q)% \\wedge r))+1=f((\\neg p\\rightarrow q))+f(r)+3+1=f(\\neg p)+f(q)+3+1+3+1=f(p)+1+1% +3+1+3+1=1+1+1+3+1+3+1=11 Ejemplo. Definir por recursion una funcion \\displaystyle f sobre el conjunto \\displaystyle\\mathcal{{F}}_{0} que, dada una formula \\displaystyle\\varphi, devuelva el numero total de apariciones de conectivas en \\displaystyle\\varphi . Solucion: \\displaystyle f\\colon\\mathcal{{F}}_{0} \\displaystyle\\longrightarrow\\mathbb{N}\\cup\\{0\\} formula \\displaystyle\\longmapsto\\text{num conectivas} Definimos \\displaystyle f : 1.​Si \\displaystyle\\varphi es una formula atomica, \\displaystyle f(\\varphi)=0 . \\displaystyle f(\\top)=1 , \\displaystyle f(\\perp)=1 . 2.​Si \\displaystyle\\varphi es una formula, \\displaystyle f(\\neg\\varphi)=1+f(\\varphi) 3.​Si \\displaystyle\\varphi,\\psi son formulas, \\displaystyle f(\\varphi\\circ\\psi)=1+f(\\varphi)+f(\\psi) , siendo \\displaystyle\\circ\\in\\{\\wedge,\\vee,\\rightarrow,\\leftrightarrow\\} Ejemplo. Definir por recursion una funcion \\displaystyle f sobre el conjunto \\displaystyle\\mathcal{{F}}_{0} que, dada una formula \\displaystyle\\varphi, devuelva el conjunto formado por todos los simbolos que aparecen en \\displaystyle\\varphi . Solucion: \\displaystyle A=\\{p,q,\\top,\\perp,\\wedge,\\vee,\\rightarrow,\\leftrightarrow,(,)\\} \\displaystyle f\\colon\\mathcal{{F}}_{0} \\displaystyle\\longrightarrow\\mathcal{{P}}(A) \\displaystyle\\varphi \\displaystyle\\longmapsto f(\\varphi) 1.​ \\displaystyle f(\\top)=\\{\\top\\},f(\\perp)=\\{\\perp\\},f(p)=\\{p\\} . 2.​Dado \\displaystyle\\varphi\\in\\mathcal{{F}}_{0} , \\displaystyle f(\\neg\\varphi)=f(\\varphi)\\cup\\{\\neg\\} 3.​ \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{0} , \\displaystyle\\circ\\in\\{\\wedge,\\vee,\\rightarrow,\\leftrightarrow\\} . \\displaystyle f((\\varphi\\circ\\psi))=f(\\varphi)\\cup f(\\psi)\\cup\\{(,),\\circ\\} Previous page Next page"],[["index.html","Pt2.html","S7.html"],"7 Arbol estructural de una formula ‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica","Skip to content. Arbol estructural de una formula 7 Arbol estructural de una formula Ejemplo. Vamos a construir (antes de definirlo) el arbol estructural de la formula (abreviada): \\displaystyle\\neg(p\\leftrightarrow\\neg q\\vee\\top)\\rightarrow q\\wedge\\neg r% \\rightarrow\\neg(p\\vee\\!\\perp\\!\\vee r) Definición 7.1 (Grafos, muy informal). Un grafo no dirigido es un conjunto de puntos (vertices) unidos por segmentos (aristas). El grado de un vertice es el numero de aristas que inciden en ese vertice. Un camino entre dos vertices es una sucesion de aristas que conectan esos dos vertices. La longitud del camino es el numero de aristas que lo componen. Definición 7.2 (Arboles, muy informal). Un arbol es un tipo especial de grafo que cumple dos condiciones:  ​Es conexo: entre dos vertices siempre hay algun camino.  ​No tiene ciclos: no hay caminos que empiecen y acaben en el mismo vertice (sin repetir arista). Un arbol con raiz es un arbol con vertice marcado (llamado raiz). Las hojas de un arbol son los vertices “terminales”, es decir, los vertices de grado 1 (a excepcion de la raiz). La profundidad de un arbol es la longitud del camino mas largo que va desde la raiz hasta una hoja. Definición 7.3. La construccion del arbol estructural de una formula se puede definir mediante el siguiente procedimiento recursivo: 1.​Si \\displaystyle\\varphi es una formula atomica, su arbol es un unico vertice etiquetado con \\displaystyle\\varphi . Este vertice es raiz y no hoja. Por definicion, tiene profundidad 0. 2.​Dada una formula cualquiera \\displaystyle\\varphi , el arbol de \\displaystyle\\neg\\varphi consiste en un vertice raiz etiquetado con \\displaystyle\\neg del que sale una arista (hacia abajo). En el otro extremo se “pega” el arbol de \\displaystyle\\varphi . 3.​Dadas dos formulas cualesquiera \\displaystyle\\varphi,\\psi y una conectiva binaria \\displaystyle\\circ , el arbol de \\displaystyle(\\varphi\\circ\\psi) consiste en un vertice raiz etiquetado con \\displaystyle\\circ del que salen dos aristas (hacia abajo, una hacia la izquierda y otra hacia la derecha). En el extremo de la arista izquierda se “pega” el arbol de \\displaystyle\\varphi y en el extremo de la arista derecha se “pega” el arbol de \\displaystyle\\psi . Ejemplo. Definir por recursion una funcion \\displaystyle f sobre el conjunto \\displaystyle\\mathcal{{F}}_{0} que, dada una formula \\displaystyle\\varphi, devuelva el numero total de vertices del arbol estructural de \\displaystyle\\varphi . \\displaystyle f\\colon\\mathcal{{F}}_{0} \\displaystyle\\longrightarrow\\mathbb{N} \\displaystyle\\varphi \\displaystyle\\longmapsto f(\\varphi)=\\text{ num vertices} 1.​Si \\displaystyle\\varphi es formula atomica, \\displaystyle f(\\varphi)=1 . 2.​Dada \\displaystyle\\varphi\\in\\mathcal{{F}}_{0} . \\displaystyle f(\\neg\\varphi)=f(\\varphi)+1 3.​ \\displaystyle\\varphi,\\psi\\in\\mathcal{{F}}_{0} , \\displaystyle\\circ\\in\\{\\vee,\\wedge,\\rightarrow,\\leftrightarrow\\} . \\displaystyle f(\\varphi\\circ\\psi)=f(\\varphi)+f(\\psi)+1 Observacion: coincide con el numero de simbolos no auxiliares de la formula (porque cada vertice tiene un simbolo que no es un parentesis). Previous page Next page"],[["index.html","Pt2.html","S8.html"],"8 Induccion para formulas ‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica","Skip to content. Induccion para formulas 8 Induccion para formulas Definición 8.1. Sea \\displaystyle P cierta propiedad que esta enunciada para formulas. Denotaremos como \\displaystyle P(\\varphi) el hecho de que la formula \\displaystyle\\varphi cumpel la propiedad \\displaystyle P . Supongmaos que queremos demostrar que, para toda formula \\displaystyle\\varphi se tiene \\displaystyle P(\\varphi) . Esto se puede hacer por induccion sobre el conjunto de todas las formulas mediante los siguientes pasos: 1.​Caso base: demostrar que, para toda formula atomica \\displaystyle\\varphi , se tiene \\displaystyle P(\\varphi) . 2.​Para toda formula \\displaystyle\\varphi , suponiendo que es cierta la hipotesis de induccion \\displaystyle P(\\varphi) demostrar que se cumple \\displaystyle P(\\neg\\varphi) . 3.​Para todo par de formulas \\displaystyle\\varphi,\\psi y toda conectiva binaria \\displaystyle\\circ , suponiendo que es cierta la hipotesis de induccion: \\displaystyle P(\\varphi)\\text{ y }P(\\psi) demostar que se cumple \\displaystyle P((\\varphi\\circ\\psi)) . Ejemplo. Demostrar por induccion que toda formula tiene el mismo numero de parentesis izquierdos que de derechos. \\displaystyle P(\\varphi)= “ \\displaystyle\\varphi tiene mismos parentesis izquierdos y derechos”. 1.​Caso base: \\displaystyle\\varphi atomica. \\displaystyle P(\\varphi)? Si pongo una formula atomica tiene 0 parentesis en la izquierda y 0 en la derecha. 2.​Negacion. H.I. \\displaystyle P(\\varphi) , T.I. \\displaystyle P(\\neg\\varphi)=? . Num parentesis izq de \\displaystyle\\neg\\varphi = num parent izq de \\displaystyle\\varphi = num parent dchos de \\displaystyle\\varphi = num parent dchos de \\displaystyle\\neg\\varphi . 3.​Conectiva binaria. H.I. \\displaystyle P(\\varphi) , \\displaystyle P(\\psi) . T.I. \\displaystyle P((\\varphi\\circ\\psi)) ? num parent izq de \\displaystyle(\\varphi\\circ\\psi) = num parent izq de \\displaystyle\\varphi + num parent izq de \\displaystyle\\psi + 1 = num parent dchos de \\displaystyle\\varphi + num parent dchos de \\displaystyle\\psi + 1 = num parent dchos de \\displaystyle(\\varphi\\circ\\psi) . Previous page Next page"],[["index.html","Pt2.html","S9.html"],"9 Formalizacion ‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica‣ Parte II Sintaxis de la lógica proposicional ‣ Lógica","Skip to content. Formalizacion 9 Formalizacion Definición 9.1. Una proposicion es una oracion escrita en lenguaje natural de la que se podria afirmar que es verdadera o que es falsa. Una proposicion atomica es una proposicion dentro de la que no puede encontrarse otra proposicion mas simple. Observación. El “o” no es excluyente: cierto si pasa cualquiera de las dos cosas o las dos a la vez. Tiene un papel muy importante la implicacion: Ejemplo.  ​p: “Llueve”  ​q: “Hace viento”  ​ \\displaystyle p\\rightarrow q : “Si llueve, entonces hace viento” \\displaystyle p recibe los nombres: premisa, hipotesis, condicion suficiente. \\displaystyle q recibe los nombres: conclusion, tesis, condicion necesaria. Observación. Una implicacion solamente es falsa en el caso en que se cumpla la premisa p y no la conclusion q. En el ejemplo, solamente si llueve y no hace viento. Veamos la doble implicacion como la conjuncion de dos implicaciones: Ejemplo. “Si llueve hace viento y si hace viento llueve” Formalizacion: \\displaystyle(p\\rightarrow q)\\wedge(q\\rightarrow p) o \\displaystyle p\\leftrightarrow q es lo mismo que: “Solo si hace viento llueve y si hace viento llueve” es lo mismo que: “Llueve solo si hace viento y llueve si hace viento” es lo mismo que: “Llueve si hace viento y llueve solo si hace viento” es lo mismo que: “Llueve si y solo si hace viento” Definición 9.2 (Razonamiento). Llamamos razonamiento a un conjunto de premisas representadas por formulas \\displaystyle\\varphi_{1},\\varphi_{2},\\ldots,\\varphi_{n} seguidas de una conclusion que se deduce de ellas, representada por una formula \\displaystyle\\psi . El razonamiento se presenta mediante la formula: \\displaystyle\\varphi_{1}\\wedge\\varphi_{2}\\wedge\\ldots\\wedge\\varphi_{n}\\rightarrow\\psi Previous page Next page"],[["index.html","Sx1.html"],"Terminología matemática ‣ Lógica‣ Lógica","Skip to content. Terminología matemática Terminología matemática  ​Enunciados: •​Teorema •​Proposicion - resultado de un enunciado que propone algo (menor entidad que un teorema) •​Lema - resultado cuya funcion es servir como herramienta auxiliar para probar otra cosa •​Corolario - resultados que se obtienen como consecuencia de demostrar un teorema •​Observacion - puntualizacion verdadera y suficientemente clara como para no necesitar demostracion •​Conjeturas - resultado que se cree que es cierto pero no hay una demostración Ejemplos: Teorema 0.1 (Ultimo teorema de Fermat). Sea \\displaystyle n\\geq 3 un numero natural. La ecuacion \\displaystyle x^{n}+y^{n}=z^{n} no tiene soluciones (salvo las triviales) en los numeros enteros.  ​Fermat lo enuncia en 1637.  ​Es una conjetura hasta que Andrew Wiles lo demuestra en 1995. Conjetura 0.1 (de Goldbach). Sea \\displaystyle n>2 un numero natural par. Entonces \\displaystyle n es suma de dos numeros primos. Demostracion directa Ejemplos: Proposición 0.1. Sea \\displaystyle n un numero natural impar. Entonces la division entera de \\displaystyle n^{2} entre \\displaystyle 8 tiene resto \\displaystyle 1 . Demostración. Como \\displaystyle n es impar, se puede expresar como \\displaystyle n=2m+1 con \\displaystyle m\\in\\mathbb{N} . Asimismo, tenemos que \\displaystyle n^{2}=(2m+1)^{2}=4m^{2}+4m+1\\Rightarrow n^{2}=4m(m+1)+1 Luego \\displaystyle m(m+1) es un numero par \\displaystyle\\Rightarrow \\displaystyle m(m+1)=2\\ell con \\displaystyle\\ell\\in\\mathbb{N} . \\displaystyle n^{2}=4\\cdot 2\\ell+1=8\\ell+1\\Rightarrow\\text{ El resto de $% \\displaystyle n^{2}$ entre 8 es 1.} ∎ Teorema 0.2 (de Pitagoras). Sean \\displaystyle a la longitud de la hipotenusa de un triangulo rectangulo y \\displaystyle b y \\displaystyle c las longitudes de sus dos catetos. Entonces se cumple la igualdad \\displaystyle a^{2}=b^{2}+c^{2} Demostración. Se puede demostrar de forma geométrica: Demostracion del teorema de Pitagoras Figura 1: Demostracion del teorema de Pitagoras ∎ Reduccion al absurdo Ejemplos: Teorema 0.3. \\displaystyle\\sqrt{2} es un numero irracional. Demostración. Lo demostraremos por reduccion al absurdo. Supongamos que \\displaystyle\\sqrt{2} es un numero racional. Entonces \\displaystyle\\sqrt{2} se puede escribir como una fraccion irreducible: \\displaystyle\\sqrt{2}=\\frac{a}{b} donde \\displaystyle a,b\\in\\mathbb{Z} y \\displaystyle b\\neq 0 . Entonces \\displaystyle b\\sqrt{2}=a\\Rightarrow b^{2}2=a^{2}\\Rightarrow a^{2}\\text{ es % par}\\Rightarrow a\\text{ es par}\\Rightarrow a=2c Sustituyendo \\displaystyle b^{2}2=(2c)^{2}=4c^{2}\\Rightarrow b^{2}=2c^{2}\\Rightarrow b^{2}% \\text{ es par }\\Rightarrow\\boxed{\\text{b es par}} Hay una contradiccion porque \\displaystyle a y \\displaystyle b no tenian factores en comun. Luego lo supuesto tiene que ser falso y por tanto \\displaystyle\\sqrt{2} no es racional. ∎ Previous page Next page"],[["index.html"],"Lógica","Skip to content. Lógica Lógica Diego Rodriguez Universidad Rey Juan Carlos Matemáticas + Ingeniería Informática Curso 2023-2024 Lógica © 2024 by Diego Rodríguez is licensed under Attribution-NonCommercial 4.0 International. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc/4.0/ Next page"]]